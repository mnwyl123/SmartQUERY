<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RoleMapper">
	
	<resultMap type="Role" id="roleResultMap">
		<id column="ROLE_ID" property="ROLE_ID"/>
		<result column="ROLE_NAME" property="ROLE_NAME"/>
		<result column="ROLE_NAME_EN" property="ROLE_NAME_EN"/>
		<result column="ROLE_DESC" property="ROLE_DESC"/>
		<result column="COMPANY" property="COMPANY"/>
	</resultMap>
	
	<!-- 字段 -->
	<sql id="Field">
		ROLE_ID,
		ROLE_NAME,
		ROLE_NAME_EN,
		ROLE_DESC,
		COMPANY
	</sql>

	<sql id="FieldValue">
		#{ROLE_ID},
		#{ROLE_NAME},
		#{ROLE_NAME_EN},
		#{ROLE_DESC},
		#{COMPANY}
	</sql>
		
	<!--表名 -->
	
	<sql id="tableName">
		SYS_ROLE
	</sql>
	
	<!-- 列出此组下的角色 -->
	<select id="RolelistPage" parameterType="page" resultMap="roleResultMap">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
			COMPANY = #{pd.COMPANY}
		<if test="pd.keywords != null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				 ROLE_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				 or 
				 ROLE_NAME_EN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	
	<!-- 通过id查找 -->
	<select id="findObjectById" parameterType="pd" resultType="pd">
		SELECT  
		<include refid="Field"></include>
		FROM 
		<include refid="tableName"></include>
		WHERE ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 添加 -->
	<insert id="insert" parameterType="pd">
		INSERT INTO 
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) VALUES (
		<include refid="FieldValue"></include>	
		)
	</insert>
	
	<!-- 保存修改 -->
	<update id="edit" parameterType="pd">
		UPDATE 
		<include refid="tableName"></include>
		SET 
			ROLE_NAME = #{ROLE_NAME},
			ROLE_NAME_EN = #{ROLE_NAME_EN},
			ROLE_DESC = #{ROLE_DESC}
		WHERE ROLE_ID = #{ROLE_ID}
	</update>
	
	<!-- 删除角色  -->
	<delete id="deleteRoleById" parameterType="pd">
		DELETE FROM 
		<include refid="tableName"></include>
		WHERE ROLE_ID=#{ROLE_ID}
	</delete>
	
	<!-- 通过id查找 -->
	<select id="getRoleById" parameterType="String" resultMap="roleResultMap">
		SELECT * FROM 
		<include refid="tableName"></include>
		WHERE ROLE_ID=#{ROLE_ID}
	</select>
	
	<resultMap id="menuResultMap1" type="com.dcits.platform.entity.system.MenuInfo">  
		<result column="MENU_ID"  		property="menuId"/>
		<result column="MENU_NAME" 		property="menuName"/>
		<result column="MENU_NAME_EN" 	property="menuNameEN"/>
		<result column="MENU_URL"	    property="menuUrl"/>
		<result column="PARENT_ID" 	    property="parentId"/>
		<result column="ORDER_BY" 		property="orderBy"/>
		<result column="MENU_ICON" 		property="menuIcon"/>
		<result column="MENU_TYPE" 		property="menuType"/>
		<result column="MENU_STATE" 	property="menuState"/>
		<result column="MENU_GROUP_ID"  property="menuGroupId"/>
		<result column="FUN_ID" 		property="funId"/>
		<result column="TRAN_CODE" 		property="tranCode"/>
		<result column="SYS_IND" 		property="sysInd"/>
		<result column="COMPANY" 		property="company"/>
		<result column="CHECKED" 		property="checked"/>
	</resultMap>
	
	<select id="queryMenuByCompany" resultMap="menuResultMap1" parameterType="map" >
		SELECT
			MENU_ID,
			MENU_NAME,
			MENU_NAME_EN,
			MENU_URL,
			PARENT_ID,
			ORDER_BY,
			MENU_ICON,
			MENU_TYPE,
			MENU_STATE,
			MENU_GROUP_ID,
		    '' FUN_ID,
			TRAN_CODE,
			SYS_IND,
			COMPANY,
			'false' CHECKED
		FROM
			sys_menu
		WHERE
			COMPANY IN  (#{company}, 'ALL')
		UNION
			SELECT
				999 MENU_ID,
				C.MENU_NAME,
				C.MENU_NAME_EN,
				C.MENU_URL,
				C.PARENT_ID,
				C.ORDER_BY,
				C.MENU_ICON,
				C.MENU_TYPE,
				C.MENU_STATE,
				C.MENU_GROUP_ID,
				C.FUN_ID,
				C.TRAN_CODE,
				C.SYS_IND,
				C.COMPANY,
				CASE WHEN D.CHECKED IS NULL THEN 'false' ELSE D.CHECKED END CHECKED
			FROM
				(
					SELECT
						MENU_ID,
						FUN_GROUP_ID,
						FUN_ID,
						'true' CHECKED
					FROM
						sys_policy
					WHERE
						ROLE_ID = #{roleId}
				) D
			RIGHT JOIN (
				SELECT
					999 MENU_ID,
					B.FUN_NAME MENU_NAME,
					A.MENU_NAME_EN,
					A.MENU_URL,
					convert(a.MENU_ID using utf8) PARENT_ID,
					A.ORDER_BY,
					A.MENU_ICON,
					A.MENU_TYPE,
					A.MENU_STATE,
					A.MENU_GROUP_ID,
					B.FUN_ID,
					A.TRAN_CODE,
					A.SYS_IND,
					A.COMPANY
				FROM
					sys_menu A
				RIGHT JOIN sys_menu_fun B ON (
					A.MENU_GROUP_ID = B.FUN_GROUP_ID
				)
				WHERE
					COMPANY IN  (#{company}, 'ALL')
			) C ON (
				C.PARENT_ID = D.MENU_ID
				AND C.MENU_GROUP_ID = D.FUN_GROUP_ID
				AND C.FUN_ID = D.FUN_ID
			)
	</select>
	
		<!-- 添加 -->
	<insert id="insertPolicy" parameterType="map">
		INSERT INTO 
			sys_policy
		(
			ROLE_ID,
			MENU_ID,
			FUN_GROUP_ID,
			FUN_ID
		) VALUES (
			#{ROLE_ID},
			#{MENU_ID},
			#{FUN_GROUP_ID},
			#{FUN_ID}
		)
	</insert>
	
	<!-- 删除  -->
	<delete id="deletePolicyById" parameterType="pd">
		DELETE FROM 
			sys_policy
		WHERE ROLE_ID=#{ROLE_ID}
	</delete>
	
	<resultMap id="policyInfoMapper" type="com.dcits.platform.entity.system.PolicyInfo">  
		<result column="ROLE_ID"  		property="roleId"/>
		<result column="MENU_ID" 		property="menuId"/>
		<result column="FUN_GROUP_ID" 	property="funGroupId"/>
		<result column="FUN_ID"	        property="funId"/>
	</resultMap>
	
	<select id="queryAllRolePolicy" parameterType="String" resultMap="policyInfoMapper">
		SELECT
		  ROLE_ID,
		  MENU_ID,
		  FUN_GROUP_ID,
		  FUN_ID
		FROM
		  SYS_POLICY
	</select>
	<select id="queryAllFunId" parameterType="String" resultType="String">
		SELECT DISTINCT
			FUN_ID
		FROM
			SYS_MENU_FUN
	</select>
	<!-- 获取与角色关联的菜单ID -->
	<select id="findMenuId" parameterType="String" resultType="String" >
		select  MENU_ID as id
		from sys_policy
		where ROLE_ID = #{ROLE_ID}
	</select>
	<!-- 删除用户角色  -->
	<delete id="deleteByRoleId" parameterType="pd">
		DELETE FROM SYS_USER_ROLE
		WHERE ROLE_ID=#{ROLE_ID}
	</delete>
	<select id="ComRolelistPage" parameterType="page" resultMap="roleResultMap">
	    SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
			Role_ID IN
			(
				SELECT
					ROLE_ID
				FROM
					sys_user_role
				WHERE
					USER_ID = #{pd.USER_ID}
			)
	</select>
	
	<!-- 通过company获取数据 -->
	<select id="findByCom" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			ROLE_NAME = #{ROLE_NAME} 
			AND COMPANY = #{company}
	</select>
	
	<!-- 查询角色是否被用户授权  -->
	<select id="findByRoleId" parameterType="pd" resultType="String" >
		SELECT USER_ID FROM SYS_USER_ROLE
		WHERE ROLE_ID=#{ROLE_ID}
	</select>
	<!-- 列出此组下的角色 -->
	<select id="AllRolelist" parameterType="pd" resultMap="roleResultMap">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
			COMPANY = #{COMPANY}
	</select>
	
	<!-- 列出此组下的角色 -->
	<select id="RolelistAut" parameterType="pd" resultMap="roleResultMap">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
			COMPANY = #{COMPANY}
		
	</select>
	
	<select id="ComRolelistAut" parameterType="pd" resultMap="roleResultMap">
	    SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE
			Role_ID IN
			(
				SELECT
					ROLE_ID
				FROM
					sys_user_role
				WHERE
					USER_ID = #{USER_ID}
			)
	</select>
</mapper>