<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

	<resultMap type="User" id="userResultMap">
		<id column="USER_ID" property="USER_ID"/>
		<result column="USERNAME" property="USERNAME"/>
		<result column="PASSWORD" property="PASSWORD"/>
		<result column="NAME" property="NAME"/>
		<result column="LAST_LOGIN" property="LAST_LOGIN"/>
		<result column="IP" property="IP"/>
		<result column="SKIN" property="SKIN"/>
		<result column="EMAIL" property="EMAIL"/>
		<result column="TELLER_NUMBER" property="TELLER_NUMBER"/>
		<result column="PHONE" property="PHONE"/>
		<result column="DEPT_CODE" property="DEPT_CODE"/>
		<result column="PWD_ALTER_TIME" property="PWD_ALTER_TIME"/>
		<result column="STATE" property="STATE"/>
		<result column="ERR_TIMES" property="ERR_TIMES"/>
		<result column="LOCK_STATUS" property="LOCK_STATUS"/>
		<result column="COMPANY" property="COMPANY"/>
		<result column="MAC" property="MAC"/>
		<result column="UPDATE_TIME" property="UPDATE_TIME"/>
	</resultMap>
	
	<!--表名 -->
	<sql id="tableName">
		SYS_USER
	</sql>
	<sql id="orgTableName">
		SYS_ORG
	</sql>
	<sql id="userOrgTableName">
		SYS_USER_ORG
	</sql>
	<sql id="companyTableName">
		SYS_COMPANY
	</sql>
	<sql id="passwordTableName">
		SYS_PASSWORD
	</sql>
	<sql id="userRoleTableName">
		SYS_USER_Role
	</sql>
	<sql id="roleTableName">
		SYS_Role
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		LAST_LOGIN,
		IP,
		SKIN,
		EMAIL,
		TELLER_NUMBER,
		PHONE,
		PWD_ALTER_TIME,
		DEPT_CODE,
		STATE,
		ERR_TIMES,
		LOCK_STATUS,
		COMPANY,
		MAC,
		USERNAME_PERBANK,
		USERNAME_PERBANK_ORG,
		IS_ONLINE_USER,
		UPDATE_TIME,
		CHANNEL_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{LAST_LOGIN},
		#{IP},
		#{SKIN},
		#{EMAIL},
		#{TELLER_NUMBER},
		#{PHONE},
		#{PWD_ALTER_TIME},
		#{DEPT_CODE},
		#{STATE},
		#{ERR_TIMES},
		#{LOCK_STATUS},
		#{COMPANY},
		#{MAC},
		#{USERNAME_PERBANK},
		#{USERNAME_PERBANK_ORG},
		#{IS_ONLINE_USER},
		SYSDATE(),
		#{CHANNEL_ID}
	</sql>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultMap="userResultMap">
		select <include refid="Field"></include> from
		<include refid="tableName"></include>
		where 1=1
		<if test="USERNAME!=null and PASSWORD!=null">
		and USERNAME = #{USERNAME} and PASSWORD=#{PASSWORD} and COMPANY=#{COMPANY}
		</if>
		<if test="USER_ID!=null and USER_ID>=0">
		and USER_ID = #{USER_ID}
		</if>
	</select>
	
	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd" >
		update
		<include refid="tableName"></include>
		set 
		LAST_LOGIN = #{LAST_LOGIN} 
		where USER_ID = #{USER_ID}
	</update>
	
	<!-- 通过用户ID获取用户信息和角色信息 -->
	<select id="getUserById" parameterType="String" resultMap="userResultMap">
		select  <include refid="Field"></include> from
		<include refid="tableName"></include>
		where USER_ID=#{USER_ID}
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUsername" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USERNAME = #{USERNAME} 
			AND COMPANY = #{company}
	</select>
	
	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd" >
		update 
		<include refid="tableName"></include> 
		set 
			IP = #{IP}
		where 
			USER_ID = #{USER_ID}
	</update>
	
	<!-- 列出某角色下的所有用户 -->
	<select id="listAllUserByRoldId"  parameterType="pd" resultType="pd" >
		select USER_ID
		from 
		<include refid="tableName"></include>
		where 
		ROLE_ID = #{ROLE_ID}
	</select>
	
	<!-- 用户列表 展示 zy-->
	<select id="userlistPage" parameterType="page" resultType="pd" >
		SELECT
			A.USER_ID,
			A.USERNAME,
			A.PASSWORD,
			A.NAME,
			A.LAST_LOGIN,
			A.IP,
			A.MAC,
			A.SKIN,
			A.EMAIL,
			A.TELLER_NUMBER,
			A.PHONE,
			A.PWD_ALTER_TIME,
			A.DEPT_CODE,
			A.STATE,
			A.ERR_TIMES,
			A.LOCK_STATUS,
			A.COMPANY,
			A.DEPARTMENT,
			A.USERNAME_PERBANK,
			USERNAME_PERBANK_ORG,
			IS_ONLINE_USER,
			(SELECT NAME FROM SYS_ORG WHERE ORG_ID = (SELECT ORG_ID FROM SYS_USER_ORG WHERE USER_ID = A.USER_ID limit 1)) ORGNAME,
			A.CHANNEL_ID,
			A.LOCK_REASON,
			A.PRODUCT_ID
		FROM
			sys_user A
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
			LEFT JOIN sys_user_role B ON A.USER_ID = B.USER_ID
		</if>
		<if test="pd.DEPARTMENT_ID != null and pd.DEPARTMENT_ID != ''">
			LEFT JOIN sys_user_org C ON A.USER_ID = C.USER_ID
		</if>
		WHERE 
		    COMPANY = #{pd.COMPANY}
		<if test="pd.DEPARTMENT_ID != null and pd.DEPARTMENT_ID != ''">
			AND ORG_ID = #{pd.DEPARTMENT_ID} 
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
			AND ROLE_ID = #{pd.ROLE_ID} 
		</if>
		<if test="pd.DEPT_CODE != null and pd.DEPT_CODE != ''">
			AND DEPT_CODE = #{pd.DEPT_CODE}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''">
			AND
				(
					 USERNAME LIKE '%${pd.keywords}%'
					 or 
					 EMAIL LIKE '%${pd.keywords}%'
					 or
					 TELLER_NUMBER LIKE '%${pd.keywords}%'
					 or
					 NAME LIKE '%${pd.keywords}%'
					 or
					 PHONE LIKE '%${pd.keywords}%'
				)
		</if>
		ORDER BY UPDATE_TIME DESC,LAST_LOGIN DESC
	</select>
	
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			TELLER_NUMBER = #{TELLER_NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过user_id获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</select>
	
	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd" >
		insert into <include refid="tableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" >
		update  <include refid="tableName"></include>
			set USERNAME				= #{USERNAME},
				NAME 					= #{NAME},
				TELLER_NUMBER			= #{TELLER_NUMBER},
				PHONE					= #{PHONE},
				EMAIL                   = #{EMAIL},
				DEPT_CODE               = #{DEPT_CODE},
				IP                      = #{IP},
				MAC               		= #{MAC},
				USERNAME_PERBANK		= #{USERNAME_PERBANK},
				USERNAME_PERBANK_ORG	= #{USERNAME_PERBANK_ORG},
				IS_ONLINE_USER			= #{IS_ONLINE_USER},
				CHANNEL_ID				= #{CHANNEL_ID}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			<if test="LOCK_STATUS != null and LOCK_STATUS != ''">
				,LOCK_STATUS				= #{LOCK_STATUS}
			</if>
			<if test="LOCK_STATUS != null and LOCK_STATUS != ''">
				,ERR_TIMES				= #{ERR_TIMES}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 修改初始密码 -->
	<update id="ChangeInitPwd" parameterType="pd" >
		update  <include refid="tableName"></include>
			set 
				PASSWORD = #{PASSWORD},
				MAC    = #{MAC},
				IP    = #{IP},
				UPDATE_TIME	= SYSDATE()
			where 
				USER_ID = #{USER_ID}
	</update>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			USER_ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" >
		select
			 <include refid="Field"></include>
		from <include refid="tableName"></include> 
		where 1=1
		<if test="pd.keywords != null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 TELLER_NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by LAST_LOGIN desc
	</select>
	
	<!-- 获取总数 -->
	<select id="getUserCount" parameterType="String" resultType="pd">
		select 
			count(USER_ID) USERCOUNT
		from 
		<include refid="tableName"></include>
	</select>
	<!-- 通过法人信息获取数据 -->
	<select id="findByCompCodeandName" parameterType="pd" resultType="String" >
		select 
			USER_ID
		from 
			<include refid="tableName"></include>
		where 
			COMPANY = #{COMP_CODE}
		and USERNAME = #{USER_CODE}
	</select>
	<!-- 删除法人及其用户 -->
	<delete id="deleteUC" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		where 
			COMPANY = #{COMP_CODE}
	</delete>
	<!-- 批量删除法人及用户 -->
	<delete id="deleteAllUC" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			COMPANY in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	<!-- 用户列表(全部) -->
	<select id="findCompCodeByUsername" parameterType="pd" resultType="pd" >
		select  u.COMPANY
		from <include refid="tableName"></include> u 
		where u.USERNAME = #{USERNAME} 
	</select>
	
	<!-- 用户机构 -->
	<select id="findOrgByUserId" parameterType="pd" resultType="pd" >
		select  *
		from <include refid="orgTableName"></include> o 
		where o.COMPANY = #{COMPANY} 
		and o.ORG_ID in
  			 (select ORG_ID FROM SYS_USER_ORG where USER_ID = #{USER_ID}) 
	</select>
	<select id="getProByUserId" parameterType="pd" resultType="pd" >
		select  
			PRODUCT_ID 
		    ,PRODUCT_NAME 
		    ,PRODUCT_STATUS 
		    ,PRODUCT_DESCRIBE 
		    ,COMPANY 
		from CIFM_PRODUCT o 
		where o.PRODUCT_ID in
  			 (select PRO_ID FROM SYS_USER_PRO where USER_ID = #{USERID}) 
	</select>
	<select id="getAllOrg" parameterType="pd" resultType="map" >
		select  ORG_ID,NAME
		from SYS_ORG
		where 1=1
	</select>
	
	<select id="getAllRole" parameterType="pd" resultType="map" >
		select  ROLE_ID,ROLE_NAME
		from SYS_ROLE
		where 1=1
	</select>

	<insert id="saveRoleAuth" parameterType="pd" >
		insert into SYS_USER_ROLE (
			USER_ID,
			ROLE_ID
		) values (
			#{USER_ID},
			#{ROLE_ID}
		)
	</insert>
	
	<insert id="saveOrgAuth" parameterType="map" >
		insert into SYS_USER_ORG (
			USER_ID,
			ORG_ID
		) values (
			#{USER_ID},
			#{ORG_ID}			
		)
	</insert>
	<insert id="saveproAuth" parameterType="map" >
		insert into SYS_USER_PRO (
			USER_ID,
			PRO_ID
		) values (
			#{USER_ID},
			#{PRO_ID}			
		)
	</insert>	
	<!-- 更新错误次数 -->
	<update id="addErrorTime" parameterType="pd" >
		update
		<include refid="tableName"></include>
		set  ERR_TIMES = #{ERR_TIMES} 
		where USERNAME = #{USERNAME} and COMPANY = #{COMPANY}
	</update>
	
	<select id="checkErrTime" parameterType="pd" resultType="String" >
		select  ERR_TIMES
		from <include refid="tableName"></include>
		where USERNAME = #{USERNAME} and COMPANY = #{COMPANY}
	</select>
	
	<select id="checkMaxTime" parameterType="String" resultType="String" >
		select  p.MAX_ERROR_LOGON
		from <include refid="passwordTableName"></include> p
	</select>
	<!-- 清除错误次数 -->
	<update id="clearErrTime" parameterType="pd" >
		update
		<include refid="tableName"></include>
		set  ERR_TIMES = null 
		where USER_ID = #{USER_ID}
	</update>
	<!-- 获取与用户关联的机构ID -->
	<select id="findOrgId" parameterType="String" resultType="String" >
		select  ORG_ID as id
		from SYS_USER_ORG
		where USER_ID = #{USER_ID}
	</select>
	<select id="findProId" parameterType="String" resultType="String" >
		select  PRO_ID as id
		from SYS_USER_PRO
		where USER_ID = #{USER_ID}
	</select>
	<!-- 已授权机构 -->
	<delete id="deleteAuthOrg" parameterType="String" >
		delete from SYS_USER_ORG
		where 
			USER_ID = #{USER_ID}
	</delete>
	<delete id="deleteAuthPro" parameterType="String" >
		delete from SYS_USER_PRO
		where 
			USER_ID = #{USER_ID}
	</delete>
	<!-- 获取与用户关联的角色ID -->
	<select id="findRoleId" parameterType="String" resultType="String" >
		select  ROLE_ID as id
		from SYS_USER_ROLE
		where USER_ID = #{USER_ID}
	</select>
	<!-- 已授权角色 -->
	<delete id="deleteAuthRole" parameterType="String" >
		delete from SYS_USER_ROLE
		where 
			USER_ID = #{USER_ID}
	</delete>
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUserId" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			USER_ID = #{USER_ID}
	</select>
	<!-- 查询用户是否被锁定-->
	<select id="checkLock" parameterType="pd" resultType="String" >
		select  LOCK_STATUS
		from <include refid="tableName"></include>
		where USERNAME = #{USERNAME} and COMPANY = #{COMPANY}
	</select>
	<!-- 锁定用户 -->
	<update id="LockUser" parameterType="pd" >
		update  <include refid="tableName"></include>
			set LOCK_STATUS	= #{LOCK_STATUS}
			where 
				USERNAME = #{USERNAME} and COMPANY = #{COMPANY}
	</update>
	<!-- 用户列表导出-->
	<select id="OutUsers" parameterType="page" resultType="pd">
		<!-- select
			 <include refid="Field"></include>
		from <include refid="tableName"></include> 
		where COMPANY = #{pd.COMPANY} -->
		SELECT
			A.USER_ID,
			A.USERNAME,
			A.PASSWORD,
			A.NAME,
			A.LAST_LOGIN,
			A.IP,
			A.MAC,
			A.SKIN,
			A.EMAIL,
			A.TELLER_NUMBER,
			A.PHONE,
			A.PWD_ALTER_TIME,
			A.DEPT_CODE,
			A.STATE,
			A.ERR_TIMES,
			A.LOCK_STATUS,
			A.COMPANY,
			A.DEPARTMENT,
			A.USERNAME_PERBANK,
			USERNAME_PERBANK_ORG,
			IS_ONLINE_USER,
			CHANNEL_ID,
			(SELECT NAME FROM SYS_ORG WHERE ORG_ID = (SELECT ORG_ID FROM SYS_USER_ORG WHERE USER_ID = A.USER_ID AND ROWNUM = 1)) ORGNAME
		FROM
			sys_user A
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
			LEFT JOIN sys_user_role B ON A.USER_ID = B.USER_ID
		</if>
		<if test="pd.DEPARTMENT_ID != null and pd.DEPARTMENT_ID != ''">
			LEFT JOIN sys_user_org C ON A.USER_ID = C.USER_ID
		</if>
		WHERE 
		    COMPANY = #{pd.COMPANY}
		<if test="pd.DEPARTMENT_ID != null and pd.DEPARTMENT_ID != ''">
			AND ORG_ID = #{pd.DEPARTMENT_ID} 
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
			AND ROLE_ID = #{pd.ROLE_ID} 
		</if>
		<if test="pd.DEPT_CODE != null and pd.DEPT_CODE != ''">
			AND DEPT_CODE = #{pd.DEPT_CODE}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''">
			AND
				(
					 USERNAME LIKE '%${pd.keywords}%'
					 or 
					 EMAIL LIKE '%${pd.keywords}%'
					 or
					 TELLER_NUMBER LIKE '%${pd.keywords}%'
					 or
					 NAME LIKE '%${pd.keywords}%'
					 or
					 PHONE LIKE '%${pd.keywords}%'
				)
		</if>
		ORDER BY UPDATE_TIME DESC,LAST_LOGIN DESC
	</select>
	<!-- 用户列表(全部) -->
	<select id="findCompCode" parameterType="pd" resultType="String" >
		select  COMPANY
		from sys_user 
		where USERNAME = #{USERNAME} and PASSWORD = #{PASSWORD}
	</select>
	<select id="findUserCode" parameterType="pd" resultType="String" >
		select  USERNAME
		from sys_user 
		where COMPANY = #{COMPANY}
	</select>
	<!-- 锁定用户 -->
	<update id="unLock" parameterType="pd" >
		update  <include refid="tableName"></include>
			set 
				ERR_TIMES	= #{ERR_TIMES},
				LOCK_STATUS	= #{LOCK_STATUS},
				PASSWORD	= #{PASSWORD}
			where 
				USER_ID = #{USER_ID}
	</update>
	<!-- 查询当前登录用户是否有查询权限 -->
	<select id="findPolicy" parameterType="pd" resultType="pd" >
		SELECT 
			A.ROLE_ID,A.ROLE_NAME,A.ROLE_DESC 
		FROM 
			SYS_ROLE A,SYS_USER_ROLE B 
		WHERE 
			A.ROLE_ID = B.ROLE_ID AND B.USER_ID=#{USER_ID} AND (A.ROLE_NAME LIKE '%查询员%' OR A.ROLE_NAME LIKE '%MAC和IP验证%')
	</select>
	<!-- 查询当前登录用户是是普通用户 -->
	<select id="findUserType" parameterType="String" resultType="pd" >
		SELECT 
			COMP_CODE,COMP_SHORT,COMP_NAME,USER_CODE 
		FROM 
			SYS_COMPANY 
		WHERE 
			USER_CODE = #{USERNAME}
	</select>
	
	<!-- 查询角色是否是查询员角色 -->
	<select id="findQueryRole" parameterType="List" resultType="String" >
		SELECT 
			A.ROLE_ID 
		FROM 
			SYS_ROLE A
		WHERE 
			(A.ROLE_NAME LIKE '%查询员%' OR A.ROLE_NAME LIKE '%MAC和IP验证%')
		AND
			A.ROLE_ID 
		IN
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach> 
	</select>
	<!-- 查询当前登录用户是否有查询权限 -->
	<select id="findCheckPolicy" parameterType="pd" resultType="pd" >
		SELECT 
			A.ROLE_ID,A.ROLE_NAME,A.ROLE_DESC 
		FROM 
			SYS_ROLE A,SYS_USER_ROLE B 
		WHERE 
			A.ROLE_ID = B.ROLE_ID AND B.USER_ID=#{USER_ID} AND (A.ROLE_NAME LIKE '%授权人%' OR A.ROLE_NAME LIKE '%审核%')
	</select>
	<!-- fh313596790qq(pengyj) -->
	<!-- 修改密码 -->
	<update id="editPwd" parameterType="pd" >
		update  
			SYS_USER
		set 
			PASSWORD   = #{PASSWORD},
			UPDATE_TIME  = SYSDATE(),
			ERR_TIMES  = #{ERR_TIMES}
			<if test="PHONE != null and PHONE != ''">
				,PHONE				= #{PHONE}
			</if>
			<if test="EMAIL != null and EMAIL != ''">
				,EMAIL				= #{EMAIL}
			</if>
			where 
				USER_ID = #{USER_ID}
	</update>
</mapper>