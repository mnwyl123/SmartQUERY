<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QueryWarnMapper">
	<delete id="deletesurgeInEarlyTEMP" parameterType="pd">
		delete from  TEMP_jzyj where userinfo = #{USER_ID}
	</delete>
	<delete id="deletesurgeInEarlyTEMP2" parameterType="pd">
		delete from  TEMP2_jzyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savesurgeInEarlyTEMP" parameterType="pd">
		INSERT INTO TEMP_jzyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.COMPANY = #{COMPANY}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND #{QUERYTIME} = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<insert id="savesurgeInEarlyTEMP2" parameterType="pd">
		INSERT INTO TEMP2_jzyj
			(	userinfo,
				username,
				QUERY_MONTH,
				PERSONQUERYTOPLIMIT,
				ORGQUERYTOPLIMIT,
				QUERYTOPLIMIT
			)
		select
				#{USER_ID},
				username,
				QUERY_MONTH,
				(select QUERY_MIN_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = 'new' and user_type=1) PERSONQUERYTOPLIMIT,
				(select QUERY_MIN_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = 'new' and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(QUERY_MIN_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = 'new' and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where  QUERY_MONTH='new') a
	</insert>
	<!-- 查询激增情况预警 管理员-->
	
	<select id="surgeInEarlylistPage" parameterType="page" resultType="pd">		
    	<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.COMPANY = #{pd.COMPANY}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE),
		temp2 as(
			select USER_ID,
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct USER_ID, username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},0,7),'-','')) a
			) -->
			select * from (
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				     WHEN ORGQUERYTOPLIMIT = 0 THEN 100
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/ifnull(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGOUTPERCENT,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				     WHEN PERSONQUERYTOPLIMIT=0 THEN 100
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/ifnull(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end ,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONOUTPERCENT,
			ifnull((SELECT SUM(CNT) FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{pd.USER_ID}) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{pd.USER_ID}) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{pd.USER_ID}) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID 
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND #{pd.QUERYTIME} = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
			) U
			) a
		WHERE PERSONQUERYCNT &lt; PERSONQUERYTOPLIMIT or ORGQUERYCNT &lt; ORGQUERYTOPLIMIT
		<!-- <if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if> -->
	</select>
	<select id="hisSurgeInEarlylistPage" parameterType="page" resultType="pd">		
    	WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS_HIS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.COMPANY = #{pd.COMPANY}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE),
		temp2 as(
			select USER_ID,
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct USER_ID, username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},1,7),'-','')) a
			)
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP WHERE USERNAME=U.USERNAME AND ROWNUM &lt; 2) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				     WHEN ORGQUERYTOPLIMIT = 0 THEN 100
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/NVL(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGOUTPERCENT,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				     WHEN PERSONQUERYTOPLIMIT=0 THEN 100
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/NVL(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end ,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONOUTPERCENT,
			NVL((SELECT SUM(CNT) FROM TEMP WHERE USERNAME=U.USERNAME),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from temp2 where USER_ID = G.USER_ID) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from temp2 where USER_ID = G.USER_ID) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from temp2 where USER_ID = G.USER_ID) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID AND A.COMPANY = #{pd.COMPANY}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND EXISTS (
						SELECT 1 
						FROM SYS_ORG A,
							SYS_USER_ORG B
						WHERE
						 	A.ORG_ID = B.ORG_ID
						 	AND B.USER_ID = F.USER_SYS_ID
							AND A.NAME = #{pd.ORGNAME}
							AND A.COMPANY = #{pd.COMPANY}
					)
				</if>
			) U
		WHERE 1=1
		<if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if>
	</select>
	<delete id="deletefailPercentToLargeTEMP" parameterType="pd">
		delete from  temp_sbyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savefailPercentToLargeTEMP" parameterType="pd">
		INSERT INTO temp_sbyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
						) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND left(#{QUERYTIME},10) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<!-- 查询失败占比过大情况预警管理员 -->
	<select id="failPercentToLargelistPage" parameterType="page" resultType="pd">
		select 
			* 
		from 
			(SELECT 
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				ORGQUERYCNT,
				ORGQUERYFAILCNT,
				ROUND(ORGQUERYFAILCNT*100/(case when ORGQUERYCNT = 0 then '1' else ORGQUERYCNT end),2) ORGFAILPERCENT,
				PERSONQUERYCNT,
				PERSONQUERYFAILCNT,
				ROUND(PERSONQUERYFAILCNT*100/(case when PERSONQUERYCNT = 0 then '1' else PERSONQUERYCNT end),2) PERSONFAILPERCENT,
				QUERYCNT,
				ORGQUERYFAILCNT+PERSONQUERYFAILCNT FAILCNT,
				ROUND((ORGQUERYFAILCNT+PERSONQUERYFAILCNT)*100/(case when QUERYCNT = 0 then '1' else QUERYCNT end),2) FAILPERCENT,
				FAIL_ZBSX_PER,
				FAIL_ZBSX_ORG
			FROM 
				(<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
							AND A.COMPANY = #{pd.COMPANY}
						) G
					WHERE F.USER_SYS_ID = G.USER_ID
						AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
						AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE) -->
				SELECT 
					#{pd.QUERYTIME} DATADATE,
					(SELECT ORGNAME FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
					U.USERNAME,
					U.NAME USERREALNAME,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_COMPANY_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{pd.QUERYTIME},10)) ORGQUERYFAILCNT,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_PERSON_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{pd.QUERYTIME},10)) PERSONQUERYFAILCNT,
					ifnull((SELECT SUM(CNT) FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT,
					U.FAIL_ZBSX_PER FAIL_ZBSX_PER,
					U.FAIL_ZBSX_ORG FAIL_ZBSX_ORG
				FROM
					(SELECT 
						DISTINCT G.USERNAME,G.NAME,H.FAIL_ZBSX_PER,H.FAIL_ZBSX_ORG
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.NAME,A.USERNAME,B.ORG_ID FROM SYS_USER A,SYS_USER_ORG B
							WHERE A.USER_ID = B.USER_ID
							AND A.COMPANY = #{pd.COMPANY} 
						) G,
						CIFM_PARAM_LIST H
					WHERE F.USER_SYS_ID = G.USER_ID
						AND G.ORG_ID = H.ORG_ID
						
						AND left(#{pd.QUERYTIME},10) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
						<!-- <if test="pd.ORGNAME != null and pd.ORGNAME != ''">
							AND EXISTS (
								SELECT 1 
								FROM SYS_ORG A,
									SYS_USER_ORG B
								WHERE
								 	A.ORG_ID = B.ORG_ID
								 	AND B.USER_ID = F.USER_SYS_ID
									AND A.NAME = #{pd.ORGNAME}
									AND A.COMPANY = #{pd.COMPANY} 
							)
						</if> -->
					) U
				WHERE
					1=1		
					<if test="pd.USERNAME != null and pd.USERNAME != ''">
						AND U.USERNAME = #{pd.USERNAME}
					</if>
				) b
			) a
		where
			ORGFAILPERCENT &gt; FAIL_ZBSX_ORG
			or PERSONFAILPERCENT &gt; FAIL_ZBSX_PER
	</select>
	<!-- 非工作时段查询预警管理员 -->
<!-- 	<select id="noWorkTimelistPage" parameterType="page" resultType="pd">
		WITH TEMP AS (SELECT F.ID,F.CLIENT_TYPE
			FROM 
				CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,A.IS_ONLINE_USER,H.NAME ORGNAME 
				FROM SYS_USER A,
				SYS_USER_ORG B,
				SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
				AND B.ORG_ID = H.ORG_ID
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND G.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				AND ((TO_CHAR(F.QUERY_TIME,'HH24:MI') between (select substr(param_value,1,5) from cifm_param_list_norelation where upper(param)=upper('noWorkTime')) and '24:00')
						OR TO_CHAR(F.QUERY_TIME,'HH24:MI') between '00:00' and (select substr(param_value,-5) from cifm_param_list_norelation where upper(param)=upper('noWorkTime'))
				)
			)        
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			A.USER_SYS_NAME USERNAME,
			A.USER_REAL_NAME USERREALNAME,
			B.NAME ORGNAME,
			A.QUERY_TIME QUERYTIME,
			'企业' CLIENTTYPE,
			A.COMPANY_NAME CLIENTNAME,
			A.CHINA_CREDIT_CODE CERTNO,
			DECODE(A.IS_GET,'1','查得','未查得') QUERYRESULT
		FROM
		       CIFM_COMPANY_DETAIL A,
		       SYS_ORG B
		WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
			AND A.ID IN(SELECT ID FROM TEMP WHERE CLIENT_TYPE=2)
			AND EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND TRUNC(DATE_PARAM) = TRUNC(A.QUERY_TIME))
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND A.USER_SYS_NAME = #{pd.USERNAME}
			</if>
		UNION ALL
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			C.USER_SYS_NAME USERNAME,
			C.USER_REAL_NAME USERREALNAME,
			D.NAME ORGNAME,
			C.QUERY_TIME QUERYTIME,
			'个人' CLIENTTYPE,
			C.CLIENT_NAME CLIENTNAME,
			C.CREDENTIALS_NO CERTNO,
			DECODE(C.IS_GET,'1','查得','未查得') QUERYRESULT
		FROM
		       CIFM_PERSON_DETAIL C,
		       SYS_ORG D
		WHERE C.BRANCH_CODE = D.BRANCH_CODE_PERBANK
			AND C.ID IN(SELECT ID FROM TEMP WHERE CLIENT_TYPE=1)
			AND EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND TRUNC(DATE_PARAM) = TRUNC(C.QUERY_TIME))
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND C.USER_SYS_NAME = #{pd.USERNAME}
			</if>
	</select> -->
	<!-- 非工作时段查询预警  管理员-->
	<select id="noWorkTimelistPage" parameterType="page" resultType="pd">
		SELECT  A.CREDENTIALS_NO CERTNO,
		        A.CLIENT_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '个人' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_PERSON_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
		        AND C.COMPANY = #{pd.COMPANY} 
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>    
		    UNION ALL    
		    SELECT  A.CHINA_CREDIT_CODE CERTNO,
		        A.COMPANY_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '企业' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_COMPANY_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
		        AND C.COMPANY = #{pd.COMPANY} 
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>
	</select>
	<!-- 非工作时段查询预警 内部授权人-->
	<select id="noWorklistPage" parameterType="page" resultType="pd">
		SELECT  A.CREDENTIALS_NO CERTNO,
		        A.CLIENT_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '个人' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_PERSON_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.COMPANY = #{pd.COMPANY}
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
<!-- 		        AND B.ORG_ID IN(
                    SELECT C.ORG_ID 
                    FROM SYS_ORG C
                    START WITH C.ORG_ID=(
                    (SELECT ORG_ID FROM SYS_USER_ORG D 
                    WHERE D.USER_ID =#{pd.USER_ID}))  
                    CONNECT BY PARENT_ID = PRIOR ORG_ID) -->
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>    
		    UNION ALL    
		    SELECT  A.CHINA_CREDIT_CODE CERTNO,
		        A.COMPANY_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '企业' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_COMPANY_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.COMPANY = #{pd.COMPANY}
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>
	</select>
	<!-- 跨地域查询预警 管理员-->
	<delete id="deletecrossRegionTEMP" parameterType="pd">
		delete from TEMP_dyyj where userinfo = #{USER_ID}
	</delete>
	<select id="crossRegiontemplistPage" parameterType="page" resultType="pd">
	select *,#{pd.USER_ID} as USER_ID from
			(SELECT
				distinct #{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.COMPANY_NAME CLIENTNAME,
				A.CHINA_CREDIT_CODE CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.COMPANY = #{pd.COMPANY}
				AND C.IS_ONLINE_USER='0'
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
			UNION ALL
			SELECT
				distinct left(#{pd.QUERYTIME},7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.CLIENT_NAME CLIENTNAME,
				A.CREDENTIALS_NO CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.COMPANY = #{pd.COMPANY}
				AND C.IS_ONLINE_USER='0'
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
			) a
	
	</select>
	<insert id="savecrossRegionTEMP" parameterType="pd">
		INSERT INTO TEMP_dyyj
			(
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				REGIONALISMCODE,
				CLIENTNAME,
				CHINACREDITCODE,
				ORG_ID,
				IS_ONLINE_USER,
				userinfo
			)
			VALUES
			(
			   
	           #{DATADATE},
	           #{ORGNAME},
	           #{USERNAME},
	           #{USERREALNAME},
	           #{REGIONALISMCODE},
	           #{CLIENTNAME},
	           #{CHINACREDITCODE},
	           #{ORG_ID},
	           #{IS_ONLINE_USER},
	           #{USER_ID}
			)


	</insert>
	<select id="crossRegionlistPage" parameterType="page" resultType="pd">
		<!-- with temp as (select * from
			(SELECT
				#{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.COMPANY_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CHINA_CREDIT_CODE) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.COMPANY = #{pd.COMPANY}
				AND C.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			UNION ALL
			SELECT
				SUBSTR(#{pd.QUERYTIME},0,7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.CLIENT_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CREDENTIALS_NO) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.COMPANY = #{pd.COMPANY}
				AND C.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			)
		) -->
		SELECT * FROM TEMP_dyyj A
		WHERE userinfo = #{pd.USER_ID} and
			((SELECT COUNT(1) FROM TEMP_dyyj WHERE userinfo = #{pd.USER_ID} and left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))*100/ifnull((SELECT COUNT(1) FROM TEMP_dyyj where userinfo = #{pd.USER_ID}),1)		
			&gt; (SELECT CROSS_REGION_ZBSX FROM CIFM_PARAM_LIST WHERE COMPANY = #{pd.COMPANY} AND ORG_ID = A.ORG_ID) AND left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))	
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USERNAME = #{pd.USERNAME}
			</if>
	</select>
	
	<!-- 选择其他理由查询占比过大预警 管理员-->
	<delete id="deleteotherReasonTEMP" parameterType="pd">
		delete from  TEMP_qtyj where userinfo = #{USER_ID}
	</delete>
	<insert id="saveotherReasonTEMP" parameterType="pd">
		INSERT INTO TEMP_qtyj
			(
				ORGNAME,
				USERREALNAME,
				USERNAME,
				ISOTHERREASON,
				ORG_ID,
				userinfo
			)
			SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					case when A.QUERY_REASON='04' then '1' else '0' end as ISOTHERREASON,
					B.ORG_ID ORG_ID,
					#{pd.USER_ID}
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND left(#{QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID AND A.COMPANY = #{COMPANY})

	</insert>
	
	<select id="otherReasonlistPage" parameterType="page" resultType="pd">
		SELECT * FROM(
			<!-- WITH TEMP AS(SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					DECODE(A.QUERY_REASON,'04',1,0) ISOTHERREASON,
					B.ORG_ID ORG_ID
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
					AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID AND A.COMPANY = #{pd.COMPANY})) -->
			SELECT 
				SUBSTR(#{pd.QUERYTIME},1,7) DATADATE,
				ORG_ID,
				M.ORGNAME,
				M.USERNAME,
				M.USERREALNAME,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) ORGQUERYCNT,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME AND ISOTHERREASON=1 and userinfo = #{pd.USER_ID}) OTHERREASONCNT,
				(SELECT ROUND(SUM(ISOTHERREASON)/COUNT(1),2) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) OTHERREASONPERCENT
			FROM 
				(SELECT DISTINCT ORGNAME,USERNAME,USERREALNAME,ORG_ID FROM TEMP_qtyj
				WHERE userinfo = #{pd.USER_ID}
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND ORGNAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND USERNAME = #{pd.USERNAME}
				</if>
				) M 
			) F
		where 
			OTHERREASONPERCENT*100 &gt; (SELECT OTHER_REASON_ZBSX FROM CIFM_PARAM_LIST WHERE ORG_ID = F.ORG_ID AND COMPANY = #{pd.COMPANY})
	</select>
	<delete id="deletesurgeTEMP" parameterType="pd">
		delete from  TEMP_jzyj where userinfo = #{USER_ID}
	</delete>
	<delete id="deletesurgeTEMP2" parameterType="pd">
		delete from  TEMP2_jzyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savesurgeTEMP" parameterType="pd">
		INSERT INTO TEMP_jzyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND A.COMPANY = #{COMPANY}
					AND B.ORG_ID = H.ORG_ID
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND left(#{QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<insert id="savesurgeTEMP2" parameterType="pd">
		INSERT INTO TEMP2_jzyj
			(	userinfo,
				username,
				QUERY_MONTH,
				PERSONQUERYTOPLIMIT,
				ORGQUERYTOPLIMIT,
				QUERYTOPLIMIT
			)
		select
				#{pd.USER_ID},
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{COMPANY} AND QUERY_MONTH=replace(left(#{QUERYTIME},7),'-','')) a
	</insert>
	
	<!-- 查询激增情况预警 内部授权人-->
	<select id="surgelistPage" parameterType="page" resultType="pd">		
    	<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND A.COMPANY = #{pd.COMPANY}
					AND B.ORG_ID = H.ORG_ID
					AND B.ORG_ID IN(
					SELECT C.ORG_ID 
					FROM SYS_ORG C
					START WITH C.ORG_ID=(
						(SELECT ORG_ID FROM SYS_USER_ORG D
						WHERE D.USER_ID = #{pd.USER_ID}))  
					CONNECT BY PARENT_ID = PRIOR ORG_ID)
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE), -->
		<!-- temp2 as(
			select
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},0,7),'-','')) a
			) -->
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/ifnull(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGOUTPERCENT,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/ifnull(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONOUTPERCENT,
			ifnull((SELECT SUM(CNT) FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.COMPANY = #{pd.COMPANY} 
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
			) U
		WHERE 1=1
		<if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if>
	</select>
	<!-- 查询激增情况预警 内部授权人-->
	<select id="hisSurgelistPage" parameterType="page" resultType="pd">		
    	WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS_HIS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND A.COMPANY = #{pd.COMPANY}
					AND B.ORG_ID = H.ORG_ID
					AND B.ORG_ID IN(
					SELECT C.ORG_ID 
					FROM SYS_ORG C
					START WITH C.ORG_ID=(
						(SELECT ORG_ID FROM SYS_USER_ORG D
						WHERE D.USER_ID = #{pd.USER_ID}))  
					CONNECT BY PARENT_ID = PRIOR ORG_ID)
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE),
		temp2 as(
			select
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},1,7),'-','')) a
			)
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP WHERE USERNAME=U.USERNAME AND ROWNUM &lt; 2) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/NVL(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGOUTPERCENT,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/NVL(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONOUTPERCENT,
			NVL((SELECT SUM(CNT) FROM TEMP WHERE USERNAME=U.USERNAME),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS_HIS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.COMPANY = #{pd.COMPANY} 
						AND B.ORG_ID IN(
							SELECT C.ORG_ID FROM SYS_ORG C
							START WITH C.ORG_ID=(
								(SELECT ORG_ID FROM SYS_USER_ORG D
								WHERE D.USER_ID = #{pd.USER_ID})
							) 
							CONNECT BY PARENT_ID = PRIOR ORG_ID
						)
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND EXISTS (
						SELECT 1 
						FROM SYS_ORG A,
							SYS_USER_ORG B
						WHERE
						 	A.ORG_ID = B.ORG_ID
						 	AND B.USER_ID = F.USER_SYS_ID
							AND A.NAME = #{pd.ORGNAME}
							AND A.COMPANY = #{pd.COMPANY} 
					)
				</if>
			) U
		WHERE 1=1
		<if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if>
	</select>
	<delete id="deletefailToLargeTEMP" parameterType="pd">
		delete from  temp_sbyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savefailToLargeTEMP" parameterType="pd">
		INSERT INTO temp_sbyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
						) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND left(#{QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<!-- 查询失败占比过大情况预警 内部授权人-->
	<select id="failToLargelistPage" parameterType="page" resultType="pd">
		select 
			* 
		from 
			(SELECT 
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				ORGQUERYCNT,
				ORGQUERYFAILCNT,
				ROUND(ORGQUERYFAILCNT*100/(case when ORGQUERYCNT = 0 then '1' else ORGQUERYCNT end),2) ORGFAILPERCENT,
				PERSONQUERYCNT,
				PERSONQUERYFAILCNT,
				ROUND(PERSONQUERYFAILCNT*100/(case when PERSONQUERYCNT=0 then '1' else PERSONQUERYCNT end),2) PERSONFAILPERCENT,
				QUERYCNT,
				ORGQUERYFAILCNT+PERSONQUERYFAILCNT FAILCNT,
				ROUND((ORGQUERYFAILCNT+PERSONQUERYFAILCNT)*100/(case when QUERYCNT=0 then '1' else QUERYCNT end),2) FAILPERCENT,
				FAIL_ZBSX_PER,
				FAIL_ZBSX_ORG
			FROM 
				(<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
							AND B.ORG_ID IN(
							SELECT C.ORG_ID 
							FROM SYS_ORG C
							START WITH C.ORG_ID=(
								(SELECT ORG_ID FROM SYS_USER_ORG D 
								WHERE D.USER_ID = #{pd.USER_ID}))  
							CONNECT BY PARENT_ID = PRIOR ORG_ID)
						) G
					WHERE F.USER_SYS_ID = G.USER_ID
						AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
						AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE) -->
				SELECT 
					#{pd.QUERYTIME} DATADATE,
					(SELECT ORGNAME FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
					U.USERNAME,
					U.NAME USERREALNAME,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_COMPANY_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{pd.QUERYTIME},10)) ORGQUERYFAILCNT,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_PERSON_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{pd.QUERYTIME},10)) PERSONQUERYFAILCNT,
					ifnull((SELECT SUM(CNT) FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT,
					U.FAIL_ZBSX_PER FAIL_ZBSX_PER,
					U.FAIL_ZBSX_ORG FAIL_ZBSX_ORG
				FROM
					(SELECT 
						DISTINCT G.USERNAME,G.NAME,H.FAIL_ZBSX_PER,H.FAIL_ZBSX_ORG
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.NAME,A.USERNAME,B.ORG_ID FROM SYS_USER A,SYS_USER_ORG B
							WHERE A.USER_ID = B.USER_ID
						) G,
						CIFM_PARAM_LIST H
					WHERE F.USER_SYS_ID = G.USER_ID
						AND G.ORG_ID = H.ORG_ID
						AND left(#{pd.QUERYTIME},10) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
						<!-- <if test="pd.ORGNAME != null and pd.ORGNAME != ''">
							AND EXISTS (
								SELECT 1 
								FROM SYS_ORG A,
									SYS_USER_ORG B
								WHERE
								 	A.ORG_ID = B.ORG_ID
								 	AND B.USER_ID = F.USER_SYS_ID
									AND A.NAME = #{pd.ORGNAME}
									AND A.COMPANY = #{pd.COMPANY}
							)
						</if> -->
					) U
				WHERE
					1=1		
				) b
			) a
		where
			ORGFAILPERCENT &gt; FAIL_ZBSX_ORG
			or PERSONFAILPERCENT &gt; FAIL_ZBSX_PER
	</select>
	 <!-- 非工作时段查询预警 内部授权人-->
	<!--<select id="noWorklistPage" parameterType="page" resultType="pd">
		WITH TEMP AS (SELECT F.ID,F.CLIENT_TYPE
			FROM 
				CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,A.IS_ONLINE_USER,H.NAME ORGNAME 
				FROM SYS_USER A,
				SYS_USER_ORG B,
				SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND B.ORG_ID IN(
					SELECT C.ORG_ID 
					FROM SYS_ORG C
					START WITH C.ORG_ID=(
					(SELECT ORG_ID FROM SYS_USER_ORG D 
					WHERE D.USER_ID =#{pd.USER_ID}))  
					CONNECT BY PARENT_ID = PRIOR ORG_ID)
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND G.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				AND ((TO_CHAR(F.QUERY_TIME,'HH24:MI') between (select substr(param_value,1,5) from cifm_param_list_norelation where upper(param)=upper('noWorkTime')) and '24:00')
						OR TO_CHAR(F.QUERY_TIME,'HH24:MI') between '00:00' and (select substr(param_value,-5) from cifm_param_list_norelation where upper(param)=upper('noWorkTime'))
				)
			)        
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			A.USER_SYS_NAME USERNAME,
			A.USER_REAL_NAME USERREALNAME,
			B.NAME ORGNAME,
			A.QUERY_TIME QUERYTIME,
			'企业' CLIENTTYPE,
			A.COMPANY_NAME CLIENTNAME,
			A.CHINA_CREDIT_CODE CERTNO,
			DECODE(A.IS_GET,'1','查得','未查得') QUERYRESULT
		FROM
		       CIFM_COMPANY_DETAIL A,
		       SYS_ORG B
		WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
			AND A.ID IN(SELECT ID FROM TEMP WHERE CLIENT_TYPE=2)
			AND EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND TRUNC(DATE_PARAM) = TRUNC(A.QUERY_TIME))
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND A.USER_SYS_NAME = #{pd.USERNAME}
			</if>
		UNION ALL
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			C.USER_SYS_NAME USERNAME,
			C.USER_REAL_NAME USERREALNAME,
			D.NAME ORGNAME,
			C.QUERY_TIME QUERYTIME,
			'个人' CLIENTTYPE,
			C.CLIENT_NAME CLIENTNAME,
			C.CREDENTIALS_NO CERTNO,
			DECODE(C.IS_GET,'1','查得','未查得') QUERYRESULT
		FROM
		       CIFM_PERSON_DETAIL C,
		       SYS_ORG D
		WHERE C.BRANCH_CODE = D.BRANCH_CODE_PERBANK
			AND C.ID IN(SELECT ID FROM TEMP WHERE CLIENT_TYPE=1)
			AND EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND TRUNC(DATE_PARAM) = TRUNC(C.QUERY_TIME))
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND C.USER_SYS_NAME = #{pd.USERNAME}
			</if>
	</select> -->
	<!-- 跨地域查询预警 内部授权人-->
	<delete id="deleteRegionTEMP" parameterType="pd">
		delete from  TEMP_dyyj where userinfo = #{USER_ID}
	</delete>
	<select id="RegiontemplistPage" parameterType="page" resultType="pd">
	select *,#{pd.USER_ID} as USER_ID from
			(SELECT
				distinct #{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.COMPANY_NAME CLIENTNAME,
				A.CHINA_CREDIT_CODE CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.USER_ID=#{pd.USER_ID}
				AND C.IS_ONLINE_USER='0'
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
			UNION ALL
			SELECT
				distinct left(#{pd.QUERYTIME},7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.CLIENT_NAME CLIENTNAME,
				A.CREDENTIALS_NO CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.IS_ONLINE_USER='0'
				AND C.USER_ID=#{pd.USER_ID}
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
			) a
	
	</select>
	<insert id="saveRegionTEMP" parameterType="pd">
		INSERT INTO TEMP_dyyj
			(
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				REGIONALISMCODE,
				CLIENTNAME,
				CHINACREDITCODE,
				ORG_ID,
				IS_ONLINE_USER,
				userinfo
			)
			VALUES
			(
			   
	           #{DATADATE},
	           #{ORGNAME},
	           #{USERNAME},
	           #{USERREALNAME},
	           #{REGIONALISMCODE},
	           #{CLIENTNAME},
	           #{CHINACREDITCODE},
	           #{ORG_ID},
	           #{IS_ONLINE_USER},
	           #{USER_ID}
			)

	</insert>
	<select id="RegionlistPage" parameterType="page" resultType="pd">
		<!-- with temp as (select * from
			(SELECT
				#{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.COMPANY_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CHINA_CREDIT_CODE) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.USER_ID=#{pd.USER_ID}
				AND C.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			UNION ALL
			SELECT
				SUBSTR(#{pd.QUERYTIME},0,7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.CLIENT_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CREDENTIALS_NO) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.IS_ONLINE_USER='0'
				AND C.USER_ID=#{pd.USER_ID}
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			)
		) -->
		SELECT * FROM TEMP_dyyj A
		WHERE userinfo = #{pd.USER_ID} and
			((SELECT COUNT(1) FROM TEMP_dyyj WHERE userinfo = #{pd.USER_ID} and left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))*100/ifnull((SELECT COUNT(1) FROM TEMP_dyyj where userinfo = #{pd.USER_ID}),1)		
			&gt; (SELECT CROSS_REGION_ZBSX FROM CIFM_PARAM_LIST WHERE ORG_ID = A.ORG_ID AND COMPANY = #{pd.COMPANY}) AND left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))	
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USERNAME = #{pd.USERNAME}
			</if>
	</select>
	
	<!-- 选择其他理由查询占比过大预警 内部授权人-->
	<delete id="deleteotherReaTEMP" parameterType="pd">
		delete from  TEMP_qtyj where userinfo = #{USER_ID}
	</delete>
	<insert id="saveotherReaTEMP" parameterType="pd">
		INSERT INTO TEMP_qtyj
			(
				ORGNAME,
				USERREALNAME,
				USERNAME,
				ISOTHERREASON,
				ORG_ID,
				userinfo
			)
		SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					case when A.QUERY_REASON='04' then '1' else '0' end as ISOTHERREASON,
					B.ORG_ID ORG_ID,
					#{USER_ID}
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND left(#{QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
					)

	</insert>
	<select id="otherRealistPage" parameterType="page" resultType="pd">
		SELECT * FROM(
			<!-- WITH TEMP AS(SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					DECODE(A.QUERY_REASON,'04',1,0) ISOTHERREASON,
					B.ORG_ID ORG_ID
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
					AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND B.ORG_ID IN(
							SELECT C.ORG_ID FROM SYS_ORG C
							START WITH C.ORG_ID=(
							(SELECT ORG_ID FROM SYS_USER_ORG D 
							WHERE D.USER_ID = #{pd.USER_ID})
						)  CONNECT BY PARENT_ID = PRIOR ORG_ID)
					)) -->
			SELECT 
				SUBSTR(#{pd.QUERYTIME},1,7) DATADATE,
				ORG_ID,
				M.ORGNAME,
				M.USERNAME,
				M.USERREALNAME,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) ORGQUERYCNT,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME AND ISOTHERREASON=1 and userinfo = #{pd.USER_ID}) OTHERREASONCNT,
				(SELECT ROUND(SUM(ISOTHERREASON)/COUNT(1),2) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) OTHERREASONPERCENT
			FROM 
				(SELECT DISTINCT ORGNAME,USERNAME,USERREALNAME,ORG_ID FROM TEMP_qtyj
				WHERE  userinfo = #{pd.USER_ID}
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND ORGNAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND USERNAME = #{pd.USERNAME}
				</if>
				) M 
			) F
		where 
			OTHERREASONPERCENT*100 &gt; (SELECT OTHER_REASON_ZBSX FROM CIFM_PARAM_LIST WHERE ORG_ID = F.ORG_ID AND COMPANY = #{pd.COMPANY})
	</select>
	
	
	
	<!-- 查询激增情况预警 查询员-->
	<delete id="deletesurgeQueryTEMP" parameterType="pd">
		delete from  TEMP_jzyj where userinfo = #{USER_ID}
	</delete>
	<delete id="deletesurgeQueryTEMP2" parameterType="pd">
		delete from  TEMP2_jzyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savesurgeQueryTEMP" parameterType="pd">
		INSERT INTO TEMP_jzyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.USER_ID = #{USER_ID}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND left(#{QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<insert id="savesurgeQueryTEMP2" parameterType="pd">
		INSERT INTO TEMP2_jzyj
			(	userinfo,
				username,
				QUERY_MONTH,
				PERSONQUERYTOPLIMIT,
				ORGQUERYTOPLIMIT,
				QUERYTOPLIMIT
			)
		select	
				#{USER_ID},
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where  QUERY_MONTH=replace(left(#{QUERYTIME},7),'-','')) a
	</insert>
	
	<select id="surgeQuerylistPage" parameterType="page" resultType="pd">		
    	<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.USER_ID = #{pd.USER_ID}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE), -->
		<!-- temp2 as(
			select
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},0,7),'-','')) a
			) -->
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/ifnull(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end ,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGOUTPERCENT,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/ifnull(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end ,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONOUTPERCENT,
			ifnull((SELECT SUM(CNT) FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from temp2_jzyj where username=G.username and userinfo = #{pd.USER_ID}) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.USER_ID = #{pd.USER_ID}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
			) U
		WHERE 1=1
		<if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if>
	</select>
	<!-- 查询激增情况预警 查询员-->
	<select id="hisSurgeQuerylistPage" parameterType="page" resultType="pd">		
    	WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
			(SELECT 
				G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
			FROM CIFM_FLOW_STATUS_HIS F,
				(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
				FROM SYS_USER A,
					SYS_USER_ORG B,
					SYS_ORG H
				WHERE A.USER_ID = B.USER_ID 
					AND B.ORG_ID = H.ORG_ID
					AND A.USER_ID = #{pd.USER_ID}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
			) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE),
		temp2 as(
			select
				username,
				QUERY_MONTH,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=1) PERSONQUERYTOPLIMIT,
				(select AVG_QUERY_COUNT*QUERY_MULTIPLE from CIFM_QUERY_FREQUENCY where username=a.username and QUERY_MONTH = a.QUERY_MONTH and user_type=2) ORGQUERYTOPLIMIT,
				(select sum(AVG_QUERY_COUNT*QUERY_MULTIPLE) from CIFM_QUERY_FREQUENCY where QUERY_MONTH = a.QUERY_MONTH and username=a.username) QUERYTOPLIMIT
			from
				(select distinct username,QUERY_MONTH from CIFM_QUERY_FREQUENCY where COMPANY = #{pd.COMPANY} AND QUERY_MONTH=replace(SUBSTR(#{pd.QUERYTIME},1,7),'-','')) a
			)
		SELECT 
			#{pd.QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP WHERE USERNAME=U.USERNAME AND ROWNUM &lt; 2) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/NVL(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end ,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2),0) ORGOUTPERCENT,
			NVL((SELECT CNT FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			NVL((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/NVL(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end,1)
				END
				FROM TEMP WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1),0) PERSONOUTPERCENT,
			NVL((SELECT SUM(CNT) FROM TEMP WHERE USERNAME=U.USERNAME),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from temp2 where USERNAME=G.USERNAME) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.USER_ID = #{pd.USER_ID}
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
				AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND EXISTS (
						SELECT 1 
						FROM SYS_ORG A,
							SYS_USER_ORG B
						WHERE
						 	A.ORG_ID = B.ORG_ID
						 	AND B.USER_ID = F.USER_SYS_ID
							AND A.NAME = #{pd.ORGNAME}
							AND A.COMPANY = #{pd.COMPANY}
					)
				</if>
			) U
		WHERE 1=1
		<if test="pd.USERNAME != null and pd.USERNAME != ''">
			AND U.USERNAME = #{pd.USERNAME}
		</if>
	</select>
	<!-- 查询失败占比过大情况预警 查询员-->
	<delete id="deletefailToLargeQueryTEMP" parameterType="pd">
		delete from  TEMP_jzyj where userinfo = #{USER_ID}
	</delete>
	<insert id="savefailToLargeQueryTEMP" parameterType="pd">
		INSERT INTO temp_sbyj
			(
				ORGNAME,
				USERNAME,
				CLIENT_TYPE,
				CNT,
				userinfo
			)
		SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT,#{USER_ID} FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
						) G
			WHERE F.USER_SYS_ID = G.USER_ID
				AND left(#{QUERYTIME},10) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
			) a GROUP BY ORGNAME,USERNAME,CLIENT_TYPE
	</insert>
	<select id="failToLargeQuerylistPage" parameterType="page" resultType="pd">
		select 
			* 
		from 
			(SELECT 
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				ORGQUERYCNT,
				ORGQUERYFAILCNT,
				ROUND(ORGQUERYFAILCNT*100/(case when ORGQUERYCNT = 0 then '1' else ORGQUERYCNT end),2) ORGFAILPERCENT,
				PERSONQUERYCNT,
				PERSONQUERYFAILCNT,
				ROUND(PERSONQUERYFAILCNT*100/(case when PERSONQUERYCNT = 0 then '1' else PERSONQUERYCNT end),2) PERSONFAILPERCENT,
				QUERYCNT,
				ORGQUERYFAILCNT+PERSONQUERYFAILCNT FAILCNT,
				ROUND((ORGQUERYFAILCNT+PERSONQUERYFAILCNT)*100/(case when QUERYCNT = 0 then '1' else QUERYCNT end),2) FAILPERCENT,
				FAIL_ZBSX_PER,
				FAIL_ZBSX_ORG
			FROM 
				(<!-- WITH TEMP AS (SELECT ORGNAME,USERNAME,CLIENT_TYPE,COUNT(CLIENT_TYPE) CNT FROM
					(SELECT 
						G.ORGNAME,G.USERNAME,F.CLIENT_TYPE
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.USERNAME,H.NAME ORGNAME 
						FROM SYS_USER A,
							SYS_USER_ORG B,
							SYS_ORG H
						WHERE A.USER_ID = B.USER_ID 
							AND B.ORG_ID = H.ORG_ID
							AND A.USER_ID = #{pd.USER_ID}
						) G
					WHERE F.USER_SYS_ID = G.USER_ID
						AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= F.QUERY_TIME 
						AND F.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					) GROUP BY ORGNAME,USERNAME,CLIENT_TYPE) -->
				SELECT 
					#{pd.QUERYTIME} DATADATE,
					(SELECT ORGNAME FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID} limit 1) ORGNAME,
					U.USERNAME,
					U.NAME USERREALNAME,
					ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{pd.USER_ID}),0) ORGQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_COMPANY_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),7) = left(#{pd.QUERYTIME},7)) ORGQUERYFAILCNT,
					ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{pd.USER_ID}),0) PERSONQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_PERSON_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),7) = left(#{pd.QUERYTIME},7)) PERSONQUERYFAILCNT,
					ifnull((SELECT SUM(CNT) FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{pd.USER_ID}),0) QUERYCNT,
					U.FAIL_ZBSX_PER FAIL_ZBSX_PER,
					U.FAIL_ZBSX_ORG FAIL_ZBSX_ORG
				FROM
					(SELECT 
						DISTINCT G.USERNAME,G.NAME,H.FAIL_ZBSX_PER,H.FAIL_ZBSX_ORG
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.NAME,A.USERNAME,B.ORG_ID FROM SYS_USER A,SYS_USER_ORG B
							WHERE A.USER_ID = B.USER_ID
									AND A.USER_ID = #{pd.USER_ID}
						) G,
						CIFM_PARAM_LIST H
					WHERE F.USER_SYS_ID = G.USER_ID
						AND G.ORG_ID = H.ORG_ID
						AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m')
						<!-- <if test="pd.ORGNAME != null and pd.ORGNAME != ''">
							AND EXISTS (
								SELECT 1 
								FROM SYS_ORG A,
									SYS_USER_ORG B
								WHERE
								 	A.ORG_ID = B.ORG_ID
								 	AND B.USER_ID = F.USER_SYS_ID
									AND A.NAME = #{pd.ORGNAME}
									AND A.COMPANY = #{pd.COMPANY}
							)
						</if> -->
					) U
				WHERE
					1=1		
					<if test="pd.USERNAME != null and pd.USERNAME != ''">
						AND U.USERNAME = #{pd.USERNAME}
					</if>
				) b
			) a
		where
			ORGFAILPERCENT &gt; FAIL_ZBSX_ORG
			or PERSONFAILPERCENT &gt; FAIL_ZBSX_PER
	</select>
	<!-- 跨地域查询预警 查询员-->
	<delete id="deleteRegionQueryTEMP" parameterType="pd">
		delete from  TEMP_dyyj where userinfo = #{USER_ID}
	</delete><select id="RegionQuerytemplistPage" parameterType="page" resultType="pd">
	select *,#{pd.USER_ID} from
			(SELECT
				distinct #{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.COMPANY_NAME CLIENTNAME,
				A.CHINA_CREDIT_CODE CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.USER_ID=#{pd.USER_ID}
				AND C.IS_ONLINE_USER='0'
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
			UNION ALL
			SELECT
				distinct left(#{pd.QUERYTIME},7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				A.CLIENT_NAME CLIENTNAME,
				A.CREDENTIALS_NO CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.IS_ONLINE_USER='0'
				AND C.USER_ID=#{pd.USER_ID}
				AND left(#{pd.QUERYTIME},7) = DATE_FORMAT(a.QUERY_TIME,'%Y-%m')
			) a
	
	</select>
	<insert id="saveRegionQueryTEMP" parameterType="pd">
		INSERT INTO TEMP_dyyj
			(
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				REGIONALISMCODE,
				CLIENTNAME,
				CHINACREDITCODE,
				ORG_ID,
				IS_ONLINE_USER,
				userinfo
			)
			VALUES
			(
			   #{USER_ID},
	           #{DATADATE},
	           #{ORGNAME},
	           #{USERNAME},
	           #{USERREALNAME},
	           #{REGIONALISMCODE},
	           #{CLIENTNAME},
	           #{CHINACREDITCODE},
	           #{ORG_ID},
	           #{IS_ONLINE_USER},
			)

	</insert>
	
	<select id="RegionQuerylistPage" parameterType="page" resultType="pd">
		<!-- with temp as (select * from
			(SELECT
				#{pd.QUERYTIME} DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.COMPANY_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CHINA_CREDIT_CODE) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_COMPANY_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.USER_ID=#{pd.USER_ID}
				AND C.IS_ONLINE_USER='0'
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			UNION ALL
			SELECT
				SUBSTR(#{pd.QUERYTIME},0,7) DATADATE,
				B.NAME ORGNAME,
				A.USER_SYS_NAME USERNAME,
				A.USER_REAL_NAME USERREALNAME,
				B.REGIONALISM_CODE REGIONALISMCODE,
				DECRYPT_DEC(A.CLIENT_NAME) CLIENTNAME,
				DECRYPT_DEC(A.CREDENTIALS_NO) CHINACREDITCODE,
				B.ORG_ID ORG_ID,
				C.IS_ONLINE_USER
			FROM 
				CIFM_PERSON_DETAIL A,
				SYS_ORG B,
				SYS_USER C,
				SYS_USER_ORG D 
			WHERE A.BRANCH_CODE = B.BRANCH_CODE_PERBANK
				AND B.ORG_ID=D.ORG_ID
				AND C.USER_ID=D.USER_ID
				AND C.IS_ONLINE_USER='0'
				AND C.USER_ID=#{pd.USER_ID}
				AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME
				AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND B.NAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USER_SYS_NAME = #{pd.USERNAME}
				</if>
			)
		) -->
		SELECT * FROM TEMP_dyyj A
		WHERE userinfo = #{pd.USER_ID} and
			((SELECT COUNT(1) FROM TEMP_dyyj WHERE userinfo = #{pd.USER_ID} and left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))*100/ifnull((SELECT COUNT(1) FROM TEMP_dyyj where userinfo = #{pd.USER_ID}),1)		
			&gt; (SELECT CROSS_REGION_ZBSX FROM CIFM_PARAM_LIST WHERE ORG_ID = A.ORG_ID AND COMPANY = #{pd.COMPANY}) AND left(CHINACREDITCODE,2)!=left(REGIONALISMCODE,2))
			<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND A.USERNAME = #{pd.USERNAME}
			</if>	
	</select>
	
	<!-- 选择其他理由查询占比过大预警 查询员-->
	<delete id="deleteotherReaQueryTEMP" parameterType="pd">
		delete from  TEMP_qtyj where userinfo = #{USER_ID}
	</delete>
	<insert id="saveotherReaQueryTEMP" parameterType="pd">
		INSERT INTO TEMP_qtyj
			(
				ORGNAME,
				USERREALNAME,
				USERNAME,
				ISOTHERREASON,
				ORG_ID,
				userinfo
			)
			SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					case when A.QUERY_REASON='04' then '1' else '0' end as ISOTHERREASON,
					B.ORG_ID ORG_ID,
					#{USER_ID}
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND left(#{QUERYTIME},7) = DATE_FORMAT(A.QUERY_TIME,'%Y-%m')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.USER_ID = #{USER_ID}
					)

	</insert>
	
	<select id="otherReaQuerylistPage" parameterType="page" resultType="pd">
		SELECT * FROM(
			<!-- WITH TEMP AS(SELECT 
					B.NAME ORGNAME,
					A.USER_REAL_NAME USERREALNAME,
					A.USER_SYS_NAME USERNAME,
					DECODE(A.QUERY_REASON,'04',1,0) ISOTHERREASON,
					B.ORG_ID ORG_ID
				FROM CIFM_COMPANY_DETAIL A,
					SYS_ORG B
				WHERE A.BRANCH_CODE = B.BRANCH_CODE_COMBANK     
					AND TRUNC(TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD'),'MM') &lt;= A.QUERY_TIME 
					AND A.QUERY_TIME &lt;= TO_DATE(#{pd.QUERYTIME},'YYYY-MM-DD')
					AND A.USER_SYS_NAME IN
					(SELECT 
						A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID
						AND A.USER_ID = #{pd.USER_ID}
					)) -->
			SELECT 
				SUBSTR(#{pd.QUERYTIME},1,7) DATADATE,
				ORG_ID,
				M.ORGNAME,
				M.USERNAME,
				M.USERREALNAME,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) ORGQUERYCNT,
				(SELECT COUNT(1) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME AND ISOTHERREASON=1 and userinfo = #{pd.USER_ID}) OTHERREASONCNT,
				(SELECT ROUND(SUM(ISOTHERREASON)/COUNT(1),2) FROM TEMP_qtyj WHERE USERNAME=M.USERNAME and userinfo = #{pd.USER_ID}) OTHERREASONPERCENT
			FROM 
				(SELECT DISTINCT ORGNAME,USERNAME,USERREALNAME,ORG_ID FROM TEMP_qtyj
				WHERE  userinfo = #{pd.USER_ID}
				<if test="pd.ORGNAME != null and pd.ORGNAME != ''">
					AND ORGNAME LIKE CONCAT(CONCAT('%',#{pd.ORGNAME}),'%')
				</if>
				<if test="pd.USERNAME != null and pd.USERNAME != ''">
					AND USERNAME = #{pd.USERNAME}
				</if>
				) M 
			) F
		where 
			OTHERREASONPERCENT*100 &gt; (SELECT OTHER_REASON_ZBSX FROM CIFM_PARAM_LIST WHERE ORG_ID = F.ORG_ID AND COMPANY = #{pd.COMPANY})
	</select>
	
	<!-- 非工作时段查询预警 查询员-->
	<select id="noWorkQuerylistPage" parameterType="page" resultType="pd">
		SELECT  A.CREDENTIALS_NO CERTNO,
		        A.CLIENT_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '个人' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_PERSON_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
		        AND C.USER_ID = #{pd.USER_ID}
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>    
		    UNION ALL    
		    SELECT  A.CHINA_CREDIT_CODE CERTNO,
		        A.COMPANY_NAME CLIENTNAME,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d %H:%i:%s') QUERYTIME,
		        C.NAME USERREALNAME,
		        C.USERNAME,
		        '企业' CLIENTTYPE,
		        E.NAME ORGNAME,
		        CASE WHEN B.STATUS='06' THEN '查得'  WHEN B.STATUS='05' THEN '未查得' END QUERYRESULT,
		        DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d') QUERY_TIME
		        FROM 
		        CIFM_COMPANY_INFO A,
		        CIFM_FLOW_STATUS B,
		        SYS_USER C,
		        SYS_USER_ORG D,
		        SYS_ORG E
		    WHERE 
		        A.ID = B.ID
		        AND B.USER_SYS_ID = C.USER_ID
		        AND C.USER_ID = D.USER_ID
		        AND D.ORG_ID = E.ORG_ID
	            AND C.USER_ID = #{pd.USER_ID}
		        and DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')=#{pd.QUERYTIME}
		        and (EXISTS(SELECT 1 FROM cifm_param_list_norelation WHERE DATE_FORMAT(QUERY_TIME, '%H:%i') BETWEEN LEFT(param_value, 5) AND RIGHT(param_value, 5))
		        OR EXISTS(SELECT 1 FROM CIFM_HOLIDAY WHERE IS_HOLIDAY = 1 AND COMPANY = #{pd.COMPANY} AND DATE_FORMAT(DATE_PARAM,'%Y-%m-%d') = DATE_FORMAT(B.QUERY_TIME,'%Y-%m-%d')))
		    <if test="pd.USERNAME != null and pd.USERNAME != ''">
				AND B.USER_SYS_ID = #{pd.USER_ID}
			</if>
	</select>
<select id="shorttimelistPage" parameterType="page" resultType="pd">
select * from (
select 
CLIENT_NAME,
CREDENTIALS_NO,
GROUP_CONCAT(NAME SEPARATOR ',') NAME,
count(1) SUM 
from 
(SELECT
	A.CLIENT_NAME,
	A.CREDENTIALS_NO,
	s.NAME
FROM
	CIFM_FLOW_STATUS B
LEFT JOIN CIFM_PERSON_INFO A ON A.ID = B.ID
left join sys_user s on b.USER_SYS_ID = s.USER_ID
where APPLICATION_TIME > DATE_SUB(now(), INTERVAL (select CROSS_REGION_ZBSX from cifm_param_list) HOUR)
) a
group by CLIENT_NAME,CREDENTIALS_NO) a
where sum > (select OTHER_REASON_ZBSX from cifm_param_list)



</select>	
</mapper>