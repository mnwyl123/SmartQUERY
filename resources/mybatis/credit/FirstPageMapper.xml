<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="FirstPageMapper">
    
<!-- 统计总的查询次数 (查询员)-->
<select id="querySum" parameterType="pd" resultType="pd" >
        SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            USER_SYS_ID=#{USER_ID} AND CLIENT_TYPE=#{TYPE} AND QUERY_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE()
     UNION ALL
     SELECT 
            COUNT(STATUS) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='06' AND USER_SYS_ID=#{USER_ID} AND CLIENT_TYPE=#{TYPE} AND QUERY_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE()
</select>
<!-- 统计最近15天查询数据(查询员) -->
<select id="queryLastCount" parameterType="pd" resultType="pd" >
     <!-- SELECT 
    	TO_DATE(QUERY_TIME) TIME,COUNT(TO_DATE(QUERY_TIME)) SUM
	FROM 
    	CIFM_FLOW_STATUS 
	WHERE 
    	STR_TO_DATE(QUERY_TIME) BETWEEN TO_DATE(SYSDATE()-15) AND TO_DATE(SYSDATE()) AND STATUS='06' AND CLIENT_TYPE=#{TYPE} AND USER_SYS_ID=#{USER_ID}
    	GROUP BY TO_DATE(QUERY_TIME) ORDER BY TO_DATE(QUERY_TIME) ASC --> 
    	SELECT 
    	QUERY_TIME TIME,COUNT(QUERY_TIME) SUM
	FROM 
    	CIFM_FLOW_STATUS 
	WHERE 
    	QUERY_TIME BETWEEN (SYSDATE()-15) AND SYSDATE() AND STATUS='06' AND CLIENT_TYPE='' AND USER_SYS_ID=''
    	GROUP BY QUERY_TIME ORDER BY QUERY_TIME ASC
</select>
<!-- 统计本月查询详情(查询员) -->
<select id="queryDetail" parameterType="pd" resultType="pd" >
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='01' AND USER_SYS_ID=#{USER_ID} AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE()
       UNION ALL
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='00' AND USER_SYS_ID=#{USER_ID} AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE()
</select>
<!-- 统计总的查询次数 (管理员)-->
<select id="querySumA" parameterType="pd" resultType="pd" >
     SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            CLIENT_TYPE=#{TYPE} AND QUERY_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND USER_SYS_ID IN(SELECT USER_ID FROM SYS_USER WHERE COMPANY=#{COMPANY})
     UNION ALL
     SELECT 
            COUNT(STATUS) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='06' AND CLIENT_TYPE=#{TYPE} AND QUERY_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND USER_SYS_ID IN(SELECT USER_ID FROM SYS_USER WHERE COMPANY=#{COMPANY})
</select>
<!-- 统计最近15天查询数据(管理员) -->
<select id="queryLastCountA" parameterType="pd" resultType="pd" >
     SELECT 
    	QUERY_TIME TIME,COUNT(QUERY_TIME) SUM
	FROM 
    	CIFM_FLOW_STATUS 
	WHERE 
    	QUERY_TIME BETWEEN (SYSDATE()-15) AND SYSDATE() AND STATUS='06' AND CLIENT_TYPE=#{TYPE} AND USER_SYS_ID IN(SELECT USER_ID FROM SYS_USER WHERE COMPANY=#{COMPANY})
    	GROUP BY QUERY_TIME ORDER BY QUERY_TIME ASC 
</select>
<!-- 统计本月查询详情(管理员) -->
<select id="queryDetailA" parameterType="pd" resultType="pd" >
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='01' AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND USER_SYS_ID IN(SELECT USER_ID FROM SYS_USER WHERE COMPANY=#{COMPANY})
       UNION ALL
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='00' AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND USER_SYS_ID IN(SELECT USER_ID FROM SYS_USER WHERE COMPANY=#{COMPANY})
</select>
<!-- 统计总的审核次数 (审核员)-->
<select id="checkSum" parameterType="pd" resultType="pd" >
     SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS IN('02','05','04','06','03') AND CLIENT_TYPE=#{TYPE} AND CHECK_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND CHECK_SYS_ID=#{USER_ID} 
     UNION ALL
     SELECT 
            COUNT(STATUS) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS IN('02','05','04','06') AND CLIENT_TYPE=#{TYPE} AND QUERY_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND CHECK_SYS_ID=#{USER_ID}
</select>
<!-- 统计最近15天审核数据(审核员) -->
<select id="checkLastCount" parameterType="pd" resultType="pd" >
     SELECT 
    	QUERY_TIME TIME,COUNT(QUERY_TIME) SUM
	FROM 
    	CIFM_FLOW_STATUS 
	WHERE 
    	QUERY_TIME BETWEEN (SYSDATE()-15) AND SYSDATE() AND STATUS IN('02','05','04','06','03') AND CLIENT_TYPE=#{TYPE} AND CHECK_SYS_ID=#{USER_ID}
    	GROUP BY QUERY_TIME ORDER BY QUERY_TIME ASC 
</select>
<!-- 统计本月审核详情(审核员) -->
<select id="checkDetail" parameterType="pd" resultType="pd" >
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='01' AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND CHECK_SYS_ID=#{USER_ID}
                UNION ALL
SELECT 
            COUNT(ID) SUM
        FROM 
            CIFM_FLOW_STATUS A 
        WHERE 
            STATUS='00' AND CLIENT_TYPE=#{TYPE} AND APPLICATION_TIME BETWEEN (date_add(curdate(),interval-day(curdate())+1 day)) AND SYSDATE() AND CHECK_SYS_ID=#{USER_ID}
</select>
<select id="surgeInEarlylist" parameterType="pd" resultType="pd">		
select * from (
		SELECT 
			#{QUERYTIME} DATADATE,
			(SELECT ORGNAME FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{USER_ID} limit 1) ORGNAME,
			U.USERNAME,
			U.NAME USERREALNAME,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{USER_ID}),0) ORGQUERYCNT,
			ORGQUERYTOPLIMIT ORGQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; ORGQUERYTOPLIMIT THEN 0
				     WHEN ORGQUERYTOPLIMIT = 0 THEN 100
				ELSE (CNT-ORGQUERYTOPLIMIT)*100/ifnull(case ORGQUERYTOPLIMIT when 0 then 1 else ORGQUERYTOPLIMIT end,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{USER_ID}),0) ORGOUTPERCENT,
			ifnull((SELECT CNT FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{USER_ID}),0) PERSONQUERYCNT,
			PERSONQUERYTOPLIMIT PERSONQUERYTOPLIMIT,
			ifnull((SELECT 
				CASE WHEN CNT &lt; PERSONQUERYTOPLIMIT THEN 0
				     WHEN PERSONQUERYTOPLIMIT=0 THEN 100
				ELSE (CNT-PERSONQUERYTOPLIMIT)*100/ifnull(case PERSONQUERYTOPLIMIT when 0 then 1 else PERSONQUERYTOPLIMIT end ,1)
				END
				FROM TEMP_jzyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{USER_ID}),0) PERSONOUTPERCENT,
			ifnull((SELECT SUM(CNT) FROM TEMP_jzyj WHERE USERNAME=U.USERNAME and userinfo = #{USER_ID}),0) QUERYCNT
		FROM
			(SELECT 
				DISTINCT G.USERNAME,G.NAME,
				(select PERSONQUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{USER_ID}) PERSONQUERYTOPLIMIT,
				(select ORGQUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{USER_ID}) ORGQUERYTOPLIMIT,
				(select QUERYTOPLIMIT from TEMP2_jzyj where USERNAME = G.USERNAME and userinfo = #{USER_ID}) QUERYTOPLIMIT
			FROM CIFM_FLOW_STATUS F,
				(SELECT A.USER_ID,A.NAME,A.USERNAME FROM SYS_USER A,SYS_USER_ORG B
					WHERE A.USER_ID = B.USER_ID 
				) G
			WHERE F.USER_SYS_ID = G.USER_ID				
				AND #{QUERYTIME} = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
			) U
			)a
		WHERE PERSONQUERYCNT &lt; PERSONQUERYTOPLIMIT or ORGQUERYCNT &lt; ORGQUERYTOPLIMIT
</select>
<select id="failToLargelist" parameterType="pd" resultType="pd">
		select 
			* 
		from 
			(SELECT 
				DATADATE,
				ORGNAME,
				USERNAME,
				USERREALNAME,
				ORGQUERYCNT,
				ORGQUERYFAILCNT,
				ROUND(ORGQUERYFAILCNT*100/(case when ORGQUERYCNT = 0 then '1' else ORGQUERYCNT end),2) ORGFAILPERCENT,
				PERSONQUERYCNT,
				PERSONQUERYFAILCNT,
				ROUND(PERSONQUERYFAILCNT*100/(case when PERSONQUERYCNT=0 then '1' else PERSONQUERYCNT end),2) PERSONFAILPERCENT,
				QUERYCNT,
				ORGQUERYFAILCNT+PERSONQUERYFAILCNT FAILCNT,
				ROUND((ORGQUERYFAILCNT+PERSONQUERYFAILCNT)*100/(case when QUERYCNT=0 then '1' else QUERYCNT end),2) FAILPERCENT,
				FAIL_ZBSX_PER,
				FAIL_ZBSX_ORG
			FROM 
				(
				SELECT 
					#{QUERYTIME} DATADATE,
					(SELECT ORGNAME FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{USER_ID} limit 1) ORGNAME,
					U.USERNAME,
					U.NAME USERREALNAME,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 2 and userinfo = #{USER_ID}),0) ORGQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_COMPANY_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{QUERYTIME},10)) ORGQUERYFAILCNT,
					ifnull((SELECT CNT FROM temp_sbyj WHERE USERNAME=U.USERNAME AND CLIENT_TYPE = 1 and userinfo = #{USER_ID}),0) PERSONQUERYCNT,
					(SELECT COUNT(1) FROM CIFM_PERSON_DETAIL 
					WHERE USER_SYS_NAME=U.USERNAME 
					AND IS_GET = '0'
					AND left(DATE_FORMAT(QUERY_TIME,'%Y-%m-%d'),10) = left(#{QUERYTIME},10)) PERSONQUERYFAILCNT,
					ifnull((SELECT SUM(CNT) FROM temp_sbyj WHERE USERNAME=U.USERNAME and userinfo = #{USER_ID}),0) QUERYCNT,
					U.FAIL_ZBSX_PER FAIL_ZBSX_PER,
					U.FAIL_ZBSX_ORG FAIL_ZBSX_ORG
				FROM
					(SELECT 
						DISTINCT G.USERNAME,G.NAME,H.FAIL_ZBSX_PER,H.FAIL_ZBSX_ORG
					FROM CIFM_FLOW_STATUS F,
						(SELECT A.USER_ID,A.NAME,A.USERNAME,B.ORG_ID FROM SYS_USER A,SYS_USER_ORG B
							WHERE A.USER_ID = B.USER_ID
						) G,
						CIFM_PARAM_LIST H
					WHERE F.USER_SYS_ID = G.USER_ID
						AND G.ORG_ID = H.ORG_ID
						AND left(#{QUERYTIME},10) = DATE_FORMAT(F.QUERY_TIME,'%Y-%m-%d')
					) U
				WHERE
					1=1		
				) b
			) a
		where
			ORGFAILPERCENT &gt; FAIL_ZBSX_ORG
			or PERSONFAILPERCENT &gt; FAIL_ZBSX_PER
</select>
<select id="shorttimelist" parameterType="page" resultType="pd">
select * from (
select 
CLIENT_NAME,
CREDENTIALS_NO,
GROUP_CONCAT(NAME SEPARATOR ',') NAME,
count(1) SUM 
from 
(SELECT
	A.CLIENT_NAME,
	A.CREDENTIALS_NO,
	s.NAME
FROM
	CIFM_FLOW_STATUS B
LEFT JOIN CIFM_PERSON_INFO A ON A.ID = B.ID
left join sys_user s on b.USER_SYS_ID = s.USER_ID
where APPLICATION_TIME > DATE_SUB(now(), INTERVAL (select CROSS_REGION_ZBSX from cifm_param_list) HOUR)
) a
group by CLIENT_NAME,CREDENTIALS_NO) a
where sum > (select OTHER_REASON_ZBSX from cifm_param_list)



</select>
</mapper>