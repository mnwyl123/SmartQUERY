<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PerCreditInterfaceMapper">
	 <!-- 查询系统状态-->
	<select id="findSysStatus" parameterType="pd" resultType="pd" >
		SELECT 
			SYS_STATUS 
		FROM 
			SYS_INFO  
		WHERE 
			SYS_NO=#{sysNo}
	</select>
		<!-- 查询是否含有渠道号 -->
	<select id="findByCHANNELNO" parameterType="pd" resultType="pd">
		select 
		   CHANNEL_ID,CHANNEL_DES,CHANNEL_STATUS,CHANNEL_CONTACT,COMPANY
		from 
				CIFM_CHANNEL
		where 
			CHANNEL_ID = #{CHANNEL_ID}
	</select>
		<!-- 查询用户所在机构 -->
	<select id="findOrg" parameterType="pd" resultType="pd">
		SELECT A.ORG_CODE,A.ORG_ID,C.USER_ID,C.IP,C.MAC,C.LOCK_STATUS,C.USERNAME_PERBANK,C.USERNAME_PERBANK_ORG
		  FROM SYS_ORG A
		       INNER JOIN SYS_USER_ORG B ON A.ORG_ID = B.ORG_ID
		       INNER JOIN SYS_USER C ON B.USER_ID = C.USER_ID
		 WHERE C.USERNAME = #{USERNAME}
	</select>
		<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into CIFM_PERSON_INFO
		(
			  ID,
			  CLIENT_NAME,
			  CREDENTIALS_TYPE,
			  CREDENTIALS_NO,
			  QUERY_REASON,
			  QUERY_VERSION,
			  WARRANT_MATURITY_DATE,
			  CUST_MANAGER,
			  QUERY_TYPE   
		) values (
			#{ID},	
			ENCRYPT_DEC(#{CLIENT_NAME}),		
			#{CREDENTIALS_TYPE},
			ENCRYPT_DEC(#{CREDENTIALS_NO}),	
			#{QUERY_REASON},	
			#{QUERY_VERSION},		
			#{WARRANT_MATURITY_DATE},
			#{CUST_MANAGER},	
			#{QUERY_TYPE}	
		)
	</insert>
		<!--存入流程状态表-->
	<insert id="saveToFs" parameterType="pd">
		insert into CIFM_FLOW_STATUS
		(ID,
	         USER_SYS_ID,
	         ORG_ID,
	  		 APPLICATION_TIME,
			CHECK_SYS_ID,
	  		STATUS,
	  		IP,
	  		MAC,
	  		ANNEX,
	  		INTERNAL,
	  		CLIENT_TYPE,
	  		IS_WX_CHECK,
	  		CHANNEL_ID,
	  		CHANNEL_QUERY_NO) 
  		values (
	  		#{ID},
	        #{USER_SYS_ID},
	        #{ORG_ID},
	        TO_DATE(#{APPLICATION_TIME},'YYYY-MM-DD HH24:MI:SS'),
			#{CHECK_SYS_ID},
	  		#{STATUS},
	  		#{IP},
	  		#{MAC},
	  		#{ANNEX},
	  		#{INTERNAL},
	  		#{CLIENT_TYPE},
	  		#{IS_WX_CHECK},
	  		#{CHANNEL_ID},
	  		#{CHANNEL_QUERY_NO}
		)
	</insert>
	<!-- 查询征信账户信息 -->
	<select id="queryAccByUserName" parameterType="pd" resultType="pd">
		SELECT 
				A.CREDIT_NAME USERCODE,
				A.CURRENT_PASSWORD PASSWORD 
		FROM  
				CIFM_CREDIT_ACCT_MANAGE A 
		WHERE 
				A.CREDIT_CODE = (SELECT T.USERNAME_PERBANK_ORG FROM SYS_USER T WHERE T.USERNAME = #{USERNAME})
	</select>
		<!-- 修改流程表 -->
	<update id="updateFs" parameterType="pd" >
		UPDATE
			CIFM_FLOW_STATUS
			set 
				QUERY_TIME=TO_DATE(#{QUERY_TIME},'YYYY-MM-DD HH24:MI:SS'),
				RESULTCODE=#{RESULTCODE},
				RESULTDESC=#{RESULTDESC},
				STATUS=#{STATUS},
				REPORT_ID=#{REPORT_ID},
				INTERNAL=#{INTERNAL}
			where 
				ID=#{ID}
	</update>
		<!-- 查询同一渠道编号渠道流水号是否重复 -->
	<select id="findByQueryNo" parameterType="pd" resultType="pd">
		select 
		   *
		from 
				CIFM_FLOW_STATUS
		where 
			CHANNEL_ID = #{CHANNEL_ID} and CHANNEL_QUERY_NO=#{CHANNEL_QUERY_NO}
			AND ROWNUM = 1
			
	</select>
    <!--修改征信账户管理信息表-->
	<update id="updateByChannel" parameterType="pd">
        insert into ID_URL
        (ID,APPLICATION_TYPE,APPLICATION_URL,DATA_DATE,FILENAME,QUERY_NO)
        values(
        #{ID},
        #{TYPE_NO},
        #{ADDRESS_INFO},
        now(),
        #{FILENAME},
        #{QUERY_NO}
        )
	</update>
	<update id="updateURLDATA" parameterType="pd">
        insert into URL_DATA
        (FILENAME,QUERY_NO,APPLICATION_TYPE,APPLICATION_URL,ID,DATA_DATE)
        values(
        #{FILENAME},
        #{QUERY_NO},
        #{TYPE_NO},
        #{ADDRESS_INFO},
        #{ID},
        now()
        )
	</update>
	<update id="updateURLHISTDATA" parameterType="pd">
        insert into URL_HIST_DATA
        (FILENAME,CLIENT_NAME,CREDENTIALS_TYPE,CREDENTIALS_NO,APPLICATION_TYPE,APPLICATION_URL,ID,DATA_DATE,APPLICATION_TIME)
        values(
        #{FILENAME},
        #{CLIENT_NAME},
        #{CREDENTIALS_TYPE},
        #{CREDENTIALS_NO},
        #{TYPE_NO},
        #{ADDRESS_INFO},
        #{ID},
        now(),
        #{APPLICATION_TIME}
        )
	</update>
	<update id="updateByDate" parameterType="pd">
        insert into ID_URL
        (ID,APPLICATION_TYPE,APPLICATION_URL,DATA_DATE,FILENAME,QUERY_NO)
        values(
        #{ID},
        #{TYPE_NO},
        #{ADDRESS_INFO},
        now(),
        #{FILENAME},
        ''
        )
	</update>
	<select id="findByChannel" parameterType="pd" resultType="pd">
		select id from cifm_flow_status where QUERY_NO = #{QUERY_NO}
	</select>
	<select id="findByDATE" parameterType="pd" resultType="pd">
		select a.id from cifm_flow_status a
		left join cifm_person_info b on a.id = b.id
		where APPLICATION_TIME between 
		STR_TO_DATE(left(#{APPLICATION_TIME},19),'%Y-%m-%d %H:%i:%s') and
		ADDDATE(STR_TO_DATE(left(#{APPLICATION_TIME},19),'%Y-%m-%d %H:%i:%s'),INTERVAL 3 minute)
		and b.CLIENT_NAME = #{CLIENT_NAME}
		and b.CREDENTIALS_NO = #{CREDENTIALS_NO}
		and b.CREDENTIALS_TYPE = #{CREDENTIALS_TYPE}
		limit 1
	</select>
	<select id="findURLChannel" parameterType="pd" resultType="pd">
		select id from ID_URL where ID = #{ID} and APPLICATION_URL = #{ADDRESS_INFO}
	</select>
	<select id="findByCIP" parameterType="pd" resultType="pd">
		<![CDATA[select a.REPORT_ID
		from cifm_flow_status a 
		left join cifm_person_info b
		on a.ID = b.ID
		where b.CLIENT_NAME = #{CLIENT_NAME}
		and b.CREDENTIALS_NO = #{CREDENTIALS_NO}
		and left(a.APPLICATION_TIME,10) <= (left(#{CREATE_TIME},10) + 1)
		and a.REPORT_ID is not null and LENGTH(a.REPORT_ID) != 0
		order by a.APPLICATION_TIME desc
		limit 1]]>
	</select>
	<update id="updateCIP" parameterType="pd">
        insert into CIP_DATA_REPORTID
        (NAME,ID_NO,PHONE,CREATE_TIME,REPORT_ID)
        values(
        #{NAME},
        #{ID_NO},
        #{PHONE},
        #{CREATE_TIME},
        #{REPORT_ID}
        )
	</update>
	<select id="findByFile" parameterType="pd" resultType="pd">
		select * from ID_URL where FILENAME = #{FILENAME} limit 1
	</select>
	<delete id="deleteIdUrl" parameterType="pd">
        delete from ID_URL where FILENAME = #{FILENAME}
	</delete>
	<select id="findByFileData" parameterType="pd" resultType="pd">
		select * from url_data where FILENAME = #{FILENAME} limit 1
	</select>
	<delete id="deleteUrlData" parameterType="pd">
        delete from url_data where FILENAME = #{FILENAME}
	</delete>
	<select id="findByFileHistData" parameterType="pd" resultType="pd">
		select * from url_hist_data where FILENAME = #{FILENAME} limit 1
	</select>
	<delete id="deleteUrlHistData" parameterType="pd">
        delete from url_hist_data where FILENAME = #{FILENAME}
	</delete>
</mapper>