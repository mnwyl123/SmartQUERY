<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserQueryVolumeMapper">
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select 
		A.USER_SYS_ID,
		C.NAME USER_NAME,
		A.APPLICATION_TIME,
		ifnull(ENTER_QUERY_COUNT,0) ENTER_QUERY_COUNT,
		ifnull(PERSONAL_QUERY_COUNT,0) PERSONAL_QUERY_COUNT,
		ifnull(TOTAL ,0) TOTAL
		from 
		(select DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,USER_SYS_ID from cifm_flow_status 
		group by DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d'),USER_SYS_ID)A
		INNER JOIN SYS_USER C
		ON A.USER_SYS_ID=C.USER_ID
		left join 
		(select DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,USER_SYS_ID,count(1) TOTAL
		from cifm_flow_status group by DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d'),USER_SYS_ID) b
		on b.USER_SYS_ID = C.USER_ID and b.APPLICATION_TIME = a.APPLICATION_TIME
		left join
		(select DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,USER_SYS_ID,count(1) ENTER_QUERY_COUNT
		from cifm_flow_status where CLIENT_TYPE = '2' group by DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d'),USER_SYS_ID) d
		on d.USER_SYS_ID = C.USER_ID and d.APPLICATION_TIME = a.APPLICATION_TIME
		left join
		(select DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,USER_SYS_ID,count(1) PERSONAL_QUERY_COUNT
		from cifm_flow_status where CLIENT_TYPE = '2' group by DATE_FORMAT(APPLICATION_TIME,'%Y-%m-%d'),USER_SYS_ID) e
		on e.USER_SYS_ID = C.USER_ID and e.APPLICATION_TIME = a.APPLICATION_TIME
		where 1=1
		<if test="pd.ORG_ID!= null and pd.ORG_ID != ''">
		   and A.ORG_ID=#{pd.ORG_ID}
		</if>
		<if test="pd.USER_NAME!= null and pd.USER_NAME != ''">
		   and C.NAME LIKE CONCAT(CONCAT('%', #{pd.USER_NAME}),'%')
		</if>
		<if test="pd.START_DATE!= null and pd.START_DATE != '' and pd.END_DATE!= null and pd.END_DATE != ''">
		  and DATE_FORMAT(A.APPLICATION_TIME,'%Y/%m/%d') between #{pd.START_DATE} and #{pd.END_DATE}
		</if>
		ORDER BY a.APPLICATION_TIME DESC
	</select>
	<!-- 列表（ 内部授权人）-->
	<select id="dataCheckUserlistPage" parameterType="page" resultType="pd">
		select A.ORG_ID,
		       B.NAME ORG_NAME,
		       A.USER_ID,
		       C.NAME USER_NAME,
		       DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,
			   A.ENTER_QUERY_COUNT,
  			   A.PERSONAL_QUERY_COUNT,
  			   A.TOTAL from CIFM_USER_QUERY_COUNT A
  			   INNER JOIN SYS_ORG B
  			   ON A.ORG_ID=B.ORG_ID 
  			   INNER JOIN SYS_USER C
  			   ON A.USER_ID=C.USER_ID 
		where B.COMPANY=#{pd.COMPANY} and A.ORG_ID=#{pd.ORGID}
		<if test="pd.ORG_ID!= null and pd.ORG_ID != ''">
		   and A.ORG_ID=#{pd.ORG_ID}
		</if>
		<if test="pd.USER_NAME!= null and pd.USER_NAME != ''">
		  and C.NAME LIKE CONCAT(CONCAT('%', #{pd.USER_NAME}),'%')
		</if>
		<if test="pd.START_DATE!= null and pd.START_DATE != '' and pd.END_DATE!= null and pd.END_DATE != ''">
		  and DATE_FORMAT(A.APPLICATION_TIME,'%Y/%m/%d') between #{pd.START_DATE} and #{pd.END_DATE}
		</if>
		ORDER BY APPLICATION_TIME DESC
	</select>
	<!-- 列表  （查询员）-->
	<select id="dataQueryUserlistPage" parameterType="page" resultType="pd">
		select A.ORG_ID,
		       B.NAME ORG_NAME,
		       A.USER_ID,
		       C.NAME USER_NAME,
		       DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,
			   A.ENTER_QUERY_COUNT,
  			   A.PERSONAL_QUERY_COUNT,
  			   A.TOTAL from CIFM_USER_QUERY_COUNT A
  			   INNER JOIN SYS_ORG B
  			   ON A.ORG_ID=B.ORG_ID 
  			   INNER JOIN SYS_USER C
  			   ON A.USER_ID=C.USER_ID 
		where B.COMPANY=#{pd.COMPANY} AND A.USER_ID=#{pd.USER_ID}
		<if test="pd.ORG_ID!= null and pd.ORG_ID != ''">
		   and A.ORG_ID=#{pd.ORG_ID}
		</if>
		<if test="pd.USER_NAME!= null and pd.USER_NAME != ''">
		   and C.NAME LIKE CONCAT(CONCAT('%', #{pd.USER_NAME}),'%')
		</if>
		<if test="pd.START_DATE!= null and pd.START_DATE != '' and pd.END_DATE!= null and pd.END_DATE != ''">
		  and DATE_FORMAT(A.APPLICATION_TIME,'%Y/%m/%d') between #{pd.START_DATE} and #{pd.END_DATE}
		</if>
		ORDER BY APPLICATION_TIME DESC
	</select>
	<!-- 列表(详情) -->
	<select id="detaillistPage" parameterType="page" resultType="pd">
        select  AA.CLIENT_TYPE,
        		AA.ID,
                BB.CLIENT_NAME CLIENT_NAME,
                BB.CREDENTIALS_NO CREDENTIALS_NO,
                BB.QUERY_REASON,
                DATE_FORMAT(AA.APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,
                CC.NAME USER_NAME,
                CC.USER_ID USER_SYS_ID,
                DATE_FORMAT(AA.CHECK_TIME,'%Y-%m-%d') CHECK_TIME,
                DD.NAME CHECK_SYS_NAME
        FROM CIFM_FLOW_STATUS AA 
        INNER JOIN CIFM_PERSON_INFO BB
        ON AA.ID = BB.ID 
        INNER JOIN SYS_USER CC
        ON AA.USER_SYS_ID=CC.USER_ID 
        INNER JOIN SYS_USER DD 
        ON AA.CHECK_SYS_ID =DD.USER_ID
        INNER JOIN SYS_DICTIONARIES FF
        ON BB.QUERY_REASON=FF.DICT_CODE
       WHERE DATE_FORMAT(AA.APPLICATION_TIME,'%Y-%m-%d')=#{pd.APPLICATION_TIME} AND AA.USER_SYS_ID=#{pd.USER_ID}  AND FF.PARENT_ID='4ae7d533f9534f93970c16b127ca01d1' UNION (
       select  A.CLIENT_TYPE,
       			A.ID,
                B.COMPANY_NAME COMPANY_NAME,
                B.CHINA_CREDIT_CODE CHINA_CREDIT_CODE,
                B.QUERY_REASON,
                DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d'),
                C.NAME USER_NAME,
                C.USER_ID USER_SYS_ID,
                DATE_FORMAT(A.CHECK_TIME,'%Y-%m-%d') CHECK_TIME,
                D.NAME CHECK_SYS_NAME
        FROM CIFM_FLOW_STATUS A 
        INNER JOIN CIFM_COMPANY_INFO B
        ON A.ID = B.ID 
        INNER JOIN SYS_USER C
        ON A.USER_SYS_ID=C.USER_ID 
        INNER JOIN SYS_USER D 
        ON A.CHECK_SYS_ID =D.USER_ID
        INNER JOIN SYS_DICTIONARIES F
        ON B.QUERY_REASON=F.DICT_CODE
        WHERE DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d')=#{pd.APPLICATION_TIME}  AND A.USER_SYS_ID=#{pd.USER_ID}  AND F.PARENT_ID='2c626a7044b24ef085de984c8a5c2a90')
        ORDER BY CHECK_TIME DESC
	</select>
	<!-- 列表(详情) -->
	<select id="hisDetaillistPage" parameterType="page" resultType="pd">
        select  AA.CLIENT_TYPE,
        		AA.ID,
                BB.CLIENT_NAME CLIENT_NAME,
                BB.CREDENTIALS_NO CREDENTIALS_NO,
                BB.QUERY_REASON,
                DATE_FORMAT(AA.APPLICATION_TIME,'%Y-%m-%d') APPLICATION_TIME,
                CC.NAME USER_NAME,
                CC.USER_ID USER_SYS_ID,
                DATE_FORMAT(AA.CHECK_TIME,'%Y-%m-%d') CHECK_TIME,
                DD.NAME CHECK_SYS_NAME
        FROM CIFM_FLOW_STATUS_HIS AA 
        INNER JOIN CIFM_PERSON_INFO_HIS BB
        ON AA.ID = BB.ID 
        INNER JOIN SYS_USER CC
        ON AA.USER_SYS_ID=CC.USER_ID 
        INNER JOIN SYS_USER DD 
        ON AA.CHECK_SYS_ID =DD.USER_ID
        INNER JOIN SYS_DICTIONARIES FF
        ON BB.QUERY_REASON=FF.DICT_CODE
       WHERE DATE_FORMAT(AA.APPLICATION_TIME,'%Y-%m-%d')=#{pd.APPLICATION_TIME} and AA.ORG_ID=#{pd.ORG_ID} AND AA.USER_SYS_ID=#{pd.USER_ID} and CC.COMPANY=#{pd.COMPANY} AND FF.PARENT_ID='4ae7d533f9534f93970c16b127ca01d1' UNION (
       select  A.CLIENT_TYPE,
       			A.ID,
                B.COMPANY_NAME COMPANY_NAME,
                B.CHINA_CREDIT_CODE CHINA_CREDIT_CODE,
                B.QUERY_REASON,
                DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d'),
                C.NAME USER_NAME,
                C.USER_ID USER_SYS_ID,
                DATE_FORMAT(A.CHECK_TIME,'%Y-%m-%d') CHECK_TIME,
                D.NAME CHECK_SYS_NAME
        FROM CIFM_FLOW_STATUS_HIS A 
        INNER JOIN CIFM_COMPANY_INFO_HIS B
        ON A.ID = B.ID 
        INNER JOIN SYS_USER C
        ON A.USER_SYS_ID=C.USER_ID 
        INNER JOIN SYS_USER D 
        ON A.CHECK_SYS_ID =D.USER_ID
        INNER JOIN SYS_DICTIONARIES F
        ON B.QUERY_REASON=F.DICT_CODE
        WHERE DATE_FORMAT(A.APPLICATION_TIME,'%Y-%m-%d')=#{pd.APPLICATION_TIME} AND A.ORG_ID=#{pd.ORG_ID} AND A.USER_SYS_ID=#{pd.USER_ID} and C.COMPANY=#{pd.COMPANY} AND F.PARENT_ID='2c626a7044b24ef085de984c8a5c2a90')
        ORDER BY CHECK_TIME DESC
	</select>
</mapper>