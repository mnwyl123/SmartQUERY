
package com.dcits.credit.wsimport.password;

import java.net.MalformedURLException;
import java.net.URL;

import javax.annotation.Resource;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.dcits.platform.dao.DaoSupport;
import com.dcits.platform.util.PageData;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "IServiceAcceptWSPwd", targetNamespace = "http://serviceaccept.ws.service.pwd.channel.pbccrc.org/", wsdlLocation = "http://172.200.100.57:8080/creditreference/v2/prod/channel-change-password/ServiceAccept")
public class IServiceAcceptWSPwd_Service
    extends Service
{

    private final static URL ISERVICEACCEPTWSPWD_WSDL_LOCATION;
    private final static WebServiceException ISERVICEACCEPTWSPWD_EXCEPTION;
    private final static QName ISERVICEACCEPTWSPWD_QNAME = new QName("http://serviceaccept.ws.service.pwd.channel.pbccrc.org/", "IServiceAcceptWSPwd");
    @Resource(name = "daoSupport")
   	private static DaoSupport dao;
    
    static {
        URL url = null;
        WebServiceException e = null;
        try {
        	/*PageData pd = new PageData();
        	String sql = "SELECT VALUE from SERVER_MESSAGE_INFO  WHERE CODE = 'PASSWORD_Url'";
        	pd.put("selectSql", sql);
        	PageData str = (PageData) dao.findForObject("IndAppReMapper.selectPdInfo", pd);*/
            //url = new URL("http://9.88.47.3/creditreference/v2/prod/channel-change-password/ServiceAccept?wsdl");
//        	 https://9.88.47.149:7051/creditreferencetest/v2/test/channel-change-password/ServiceAccept?wsdl
//        	url = new URL("http://172.200.100.57:80/creditreferencetest/v2/test/channel-change-password/ServiceAccept?wsdl");
        	url = new URL("http://172.200.100.57:8080/creditreference/v2/prod/channel-change-password/ServiceAccept");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        } catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
        ISERVICEACCEPTWSPWD_WSDL_LOCATION = url;
        ISERVICEACCEPTWSPWD_EXCEPTION = e;
    }

    public IServiceAcceptWSPwd_Service() {
        super(__getWsdlLocation(), ISERVICEACCEPTWSPWD_QNAME);
    }

    public IServiceAcceptWSPwd_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), ISERVICEACCEPTWSPWD_QNAME, features);
    }

    public IServiceAcceptWSPwd_Service(URL wsdlLocation) {
        super(wsdlLocation, ISERVICEACCEPTWSPWD_QNAME);
    }

    public IServiceAcceptWSPwd_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ISERVICEACCEPTWSPWD_QNAME, features);
    }

    public IServiceAcceptWSPwd_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IServiceAcceptWSPwd_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IServiceAcceptWSPwd
     */
    @WebEndpoint(name = "ServiceAcceptWSPwdImplPort")
    public IServiceAcceptWSPwd getServiceAcceptWSPwdImplPort() {
        return super.getPort(new QName("http://serviceaccept.ws.service.pwd.channel.pbccrc.org/", "ServiceAcceptWSPwdImplPort"), IServiceAcceptWSPwd.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IServiceAcceptWSPwd
     */
    @WebEndpoint(name = "ServiceAcceptWSPwdImplPort")
    public IServiceAcceptWSPwd getServiceAcceptWSPwdImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://serviceaccept.ws.service.pwd.channel.pbccrc.org/", "ServiceAcceptWSPwdImplPort"), IServiceAcceptWSPwd.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ISERVICEACCEPTWSPWD_EXCEPTION!= null) {
            throw ISERVICEACCEPTWSPWD_EXCEPTION;
        }
        return ISERVICEACCEPTWSPWD_WSDL_LOCATION;
    }

}
